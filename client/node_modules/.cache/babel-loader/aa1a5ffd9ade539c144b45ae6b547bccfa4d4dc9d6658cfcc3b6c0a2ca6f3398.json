{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessageFromApiRequestError = exports.isApiRequestError = void 0;\nvar axios_1 = require(\"axios\");\n/**\n * Verify if the error is an AxiosError that is caused by a HTTP API error.\n */\nvar isApiRequestError = function (error) {\n  // Check if the error is an axios error\n  if (!(error instanceof axios_1.AxiosError)) {\n    return false;\n  }\n  // Check if the error is a result of a 400 or 500 response\n  if (error.code !== axios_1.AxiosError.ERR_BAD_REQUEST && error.code !== axios_1.AxiosError.ERR_BAD_RESPONSE) {\n    return false;\n  }\n  return true;\n};\nexports.isApiRequestError = isApiRequestError;\n/**\n * Extract the message from a ApiRequestError. Note that this is implemented based on how the Moralis APIs return Errors.\n * This can be in the form:\n * - { message: 'some message' }\n * - { message: ['some message', 'some other message'] }\n * - { }\n */\nvar getMessageFromApiRequestError = function (error) {\n  var _a = error.response.data,\n    message = _a.message,\n    details = _a.details;\n  var result = 'Unknown error (no error info returned from API)';\n  if (Array.isArray(message)) {\n    result = message.join(', ');\n  } else if (typeof message === 'string') {\n    result = message;\n  }\n  if (details) {\n    result += \" \".concat(JSON.stringify(details));\n  }\n  return result;\n};\nexports.getMessageFromApiRequestError = getMessageFromApiRequestError;","map":{"version":3,"mappings":";;;;;;AAAA;AAMA;;;AAGO,IAAMA,iBAAiB,GAAG,UAACC,KAAc;EAC9C;EACA,IAAI,EAAEA,KAAK,YAAYC,kBAAU,CAAC,EAAE;IAClC,OAAO,KAAK;;EAGd;EACA,IAAID,KAAK,CAACE,IAAI,KAAKD,kBAAU,CAACE,eAAe,IAAIH,KAAK,CAACE,IAAI,KAAKD,kBAAU,CAACG,gBAAgB,EAAE;IAC3F,OAAO,KAAK;;EAGd,OAAO,IAAI;AACb,CAAC;AAZYC,yBAAiB;AAc9B;;;;;;;AAOO,IAAMC,6BAA6B,GAAG,UAACN,KAAsB;EAC5D,SAAuBA,KAAK,CAACO,QAAQ,CAACC,IAAI;IAAxCC,OAAO;IAAEC,OAAO,aAAwB;EAEhD,IAAIC,MAAM,GAAG,iDAAiD;EAE9D,IAAIC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAAC,EAAE;IAC1BE,MAAM,GAAGF,OAAO,CAACK,IAAI,CAAC,IAAI,CAAC;GAC5B,MAAM,IAAI,OAAOL,OAAO,KAAK,QAAQ,EAAE;IACtCE,MAAM,GAAGF,OAAO;;EAGlB,IAAIC,OAAO,EAAE;IACXC,MAAM,IAAI,WAAII,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAE;;EAGzC,OAAOC,MAAM;AACf,CAAC;AAhBYN,qCAA6B","names":["isApiRequestError","error","axios_1","code","ERR_BAD_REQUEST","ERR_BAD_RESPONSE","exports","getMessageFromApiRequestError","response","data","message","details","result","Array","isArray","join","JSON","stringify"],"sources":["../../../src/controllers/RequestController/ApiRequestError.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}