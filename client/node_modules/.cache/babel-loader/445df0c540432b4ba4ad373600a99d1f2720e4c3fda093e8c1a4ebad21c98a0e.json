{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNFTMetadataOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/**\n * Get NFT data, including metadata (where available), for the given NFT token ID and contract address.\n * * Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n */\nexports.getNFTMetadataOperation = {\n  method: 'GET',\n  name: 'getNFTMetadata',\n  id: 'getNFTMetadata',\n  groupName: 'nft',\n  isNullable: true,\n  urlPathPattern: '/nft/{address}/{tokenId}',\n  urlPathParamNames: ['address', 'tokenId'],\n  urlSearchParamNames: ['chain', 'format', 'normalizeMetadata'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    tokenId: request.tokenId,\n    format: request.format,\n    normalizeMetadata: request.normalizeMetadata\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  return dataTypes_1.EvmNft.create(__assign(__assign({}, (0, common_core_1.toCamelCase)(jsonResponse)), {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),\n    ownerOf: jsonResponse.owner_of ? dataTypes_1.EvmAddress.create(jsonResponse.owner_of, core) : undefined,\n    lastMetadataSync: jsonResponse.last_metadata_sync ? new Date(jsonResponse.last_metadata_sync) : undefined,\n    lastTokenUriSync: jsonResponse.last_token_uri_sync ? new Date(jsonResponse.last_token_uri_sync) : undefined\n  }), core);\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    format: request.format,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum,\n    tokenId: request.tokenId,\n    normalizeMetadata: request.normalizeMetadata\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    format: jsonRequest.format,\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    tokenId: jsonRequest.tokenId,\n    normalizeMetadata: jsonRequest.normalizeMetadata\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AA2BA;;;;AAIaA,+BAAuB,GAKhC;EACFC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,gBAAgB;EACtBC,EAAE,EAAE,gBAAgB;EACpBC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE,IAAI;EAChBC,cAAc,EAAE,0BAA0B;EAC1CC,iBAAiB,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EACzCC,mBAAmB,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,mBAAmB,CAAC;EAE7DC,mBAAmB;EACnBC,gBAAgB;EAChBC,kBAAkB;EAClBC,mBAAmB;CACpB;AAED;AAEA,SAASH,mBAAmB,CAACI,OAA8B,EAAEC,IAAU;EACrE,OAAO;IACLC,KAAK,EAAEC,mCAAgB,CAACC,OAAO,CAACJ,OAAO,CAACE,KAAK,EAAED,IAAI,CAAC,CAACI,MAAM;IAC3DC,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACR,OAAO,CAACM,OAAO,EAAEL,IAAI,CAAC,CAACQ,SAAS;IAC3DC,OAAO,EAAEV,OAAO,CAACU,OAAO;IACxBC,MAAM,EAAEX,OAAO,CAACW,MAAM;IACtBC,iBAAiB,EAAEZ,OAAO,CAACY;GAC5B;AACH;AAEA,SAASb,mBAAmB,CAACc,YAAwC,EAAEb,OAA8B,EAAEC,IAAU;EAC/G,OAAOM,kBAAM,CAACC,MAAM,uBAEb,6BAAW,EAACK,YAAY,CAAC;IAC5BX,KAAK,EAAEC,mCAAgB,CAACC,OAAO,CAACJ,OAAO,CAACE,KAAK,EAAED,IAAI,CAAC;IACpDa,OAAO,EAAED,YAAY,CAACE,QAAQ,GAAGR,sBAAU,CAACC,MAAM,CAACK,YAAY,CAACE,QAAQ,EAAEd,IAAI,CAAC,GAAGe,SAAS;IAC3FC,gBAAgB,EAAEJ,YAAY,CAACK,kBAAkB,GAAG,IAAIC,IAAI,CAACN,YAAY,CAACK,kBAAkB,CAAC,GAAGF,SAAS;IACzGI,gBAAgB,EAAEP,YAAY,CAACQ,mBAAmB,GAAG,IAAIF,IAAI,CAACN,YAAY,CAACQ,mBAAmB,CAAC,GAAGL;EAAS,IAE7Gf,IAAI,CACL;AACH;AAEA,SAASJ,gBAAgB,CAACG,OAA8B,EAAEC,IAAU;EAClE,OAAO;IACLC,KAAK,EAAEC,mCAAgB,CAACC,OAAO,CAACJ,OAAO,CAACE,KAAK,EAAED,IAAI,CAAC,CAACI,MAAM;IAC3DM,MAAM,EAAEX,OAAO,CAACW,MAAM;IACtBL,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACR,OAAO,CAACM,OAAO,EAAEL,IAAI,CAAC,CAACqB,QAAQ;IAC1DZ,OAAO,EAAEV,OAAO,CAACU,OAAO;IACxBE,iBAAiB,EAAEZ,OAAO,CAACY;GAC5B;AACH;AAEA,SAASd,kBAAkB,CAACyB,WAAsC,EAAEtB,IAAU;EAC5E,OAAO;IACLC,KAAK,EAAEK,oBAAQ,CAACC,MAAM,CAACe,WAAW,CAACrB,KAAK,EAAED,IAAI,CAAC;IAC/CU,MAAM,EAAEY,WAAW,CAACZ,MAAM;IAC1BL,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACe,WAAW,CAACjB,OAAO,EAAEL,IAAI,CAAC;IACrDS,OAAO,EAAEa,WAAW,CAACb,OAAO;IAC5BE,iBAAiB,EAAEW,WAAW,CAACX;GAChC;AACH","names":["exports","method","name","id","groupName","isNullable","urlPathPattern","urlPathParamNames","urlSearchParamNames","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","address","dataTypes_1","create","lowercase","tokenId","format","normalizeMetadata","jsonResponse","ownerOf","owner_of","undefined","lastMetadataSync","last_metadata_sync","Date","lastTokenUriSync","last_token_uri_sync","checksum","jsonRequest"],"sources":["../../../src/operations/nft/getNFTMetadataOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}