{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeGetStreamById = void 0;\nvar api_utils_1 = require(\"@moralisweb3/api-utils\");\nvar StreamNetwork_1 = require(\"../utils/StreamNetwork\");\nvar IncorrectNetworkError_1 = require(\"../utils/IncorrectNetworkError\");\nvar common_streams_utils_1 = require(\"@moralisweb3/common-streams-utils\");\nvar makeGetAptosStream = function (core, baseUrl, _a) {\n  var networkType = _a.networkType,\n    network = _a.network,\n    options = __rest(_a, [\"networkType\", \"network\"]);\n  return new api_utils_1.OperationResolver(common_streams_utils_1.getStreamAptosOperation, baseUrl, core).fetch(options);\n};\nvar makeGetEvmStream = function (core, baseUrl, _a) {\n  var networkType = _a.networkType,\n    network = _a.network,\n    options = __rest(_a, [\"networkType\", \"network\"]);\n  return new api_utils_1.OperationResolver(common_streams_utils_1.getStreamEvmOperation, baseUrl, core).fetch(options);\n};\nvar makeGetStreamById = function (core, baseUrl) {\n  return function (getStreamOptions) {\n    // Backwards compatibility for the 'network' parameter\n    if (!getStreamOptions.networkType && getStreamOptions.network) {\n      getStreamOptions.networkType = getStreamOptions.network;\n    }\n    switch (getStreamOptions.networkType) {\n      case StreamNetwork_1.StreamNetwork.APTOS:\n        return makeGetAptosStream(core, baseUrl, getStreamOptions);\n      case StreamNetwork_1.StreamNetwork.EVM:\n        return makeGetEvmStream(core, baseUrl, getStreamOptions);\n      default:\n        if (getStreamOptions.networkType === undefined) {\n          return makeGetEvmStream(core, baseUrl, getStreamOptions);\n        }\n        throw new IncorrectNetworkError_1.IncorrectNetworkError(getStreamOptions.networkType);\n    }\n  };\n};\nexports.makeGetStreamById = makeGetStreamById;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAsBA,IAAMA,kBAAkB,GAAG,UACzBC,IAAU,EACVC,OAAe,EACfC,EAA2D;EAAzD,eAAW;IAAEC,OAAO;IAAKC,OAAO,cAAlC,0BAAoC,CAAF;EAElC,OAAO,IAAIC,6BAAiB,CAACC,8CAAuB,EAAEL,OAAO,EAAED,IAAI,CAAC,CAACO,KAAK,CAACH,OAAO,CAAC;AACrF,CAAC;AAED,IAAMI,gBAAgB,GAAG,UAACR,IAAU,EAAEC,OAAe,EAAEC,EAAyD;EAAvD,eAAW;IAAEC,OAAO;IAAKC,OAAO,cAAlC,0BAAoC,CAAF;EACvF,OAAO,IAAIC,6BAAiB,CAACC,4CAAqB,EAAEL,OAAO,EAAED,IAAI,CAAC,CAACO,KAAK,CAACH,OAAO,CAAC;AACnF,CAAC;AAEM,IAAMK,iBAAiB,GAAG,UAACT,IAAU,EAAEC,OAAe;EAC3D,OAAQ,UAACS,gBAAkC;IACzC;IACA,IAAI,CAACA,gBAAgB,CAACC,WAAW,IAAID,gBAAgB,CAACP,OAAO,EAAE;MAC7DO,gBAAgB,CAACC,WAAW,GAAGD,gBAAgB,CAACP,OAAO;;IAGzD,QAAQO,gBAAgB,CAACC,WAAW;MAClC,KAAKC,6BAAa,CAACC,KAAK;QACtB,OAAOd,kBAAkB,CAACC,IAAI,EAAEC,OAAO,EAAES,gBAAgB,CAAC;MAC5D,KAAKE,6BAAa,CAACE,GAAG;QACpB,OAAON,gBAAgB,CAACR,IAAI,EAAEC,OAAO,EAAES,gBAAgB,CAAC;MAC1D;QACE,IAAIA,gBAAgB,CAACC,WAAW,KAAKI,SAAS,EAAE;UAC9C,OAAOP,gBAAgB,CAACR,IAAI,EAAEC,OAAO,EAAES,gBAAgB,CAAC;;QAE1D,MAAM,IAAIM,6CAAqB,CAACN,gBAAgB,CAACC,WAAW,CAAC;IAAC;EAEpE,CAAC;AACH,CAAC;AAnBYM,yBAAiB","names":["makeGetAptosStream","core","baseUrl","_a","network","options","api_utils_1","common_streams_utils_1","fetch","makeGetEvmStream","makeGetStreamById","getStreamOptions","networkType","StreamNetwork_1","APTOS","EVM","undefined","IncorrectNetworkError_1","exports"],"sources":["../../src/methods/getById.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}