{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmStreamResult = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmStreamResultFormatter_1 = require(\"./EvmStreamResultFormatter\");\nvar EvmStreamResultParser_1 = require(\"./EvmStreamResultParser\");\nvar abi_1 = require(\"@ethersproject/abi\");\n/**\n * The EvmStreamResult class is representation of the webhook data that is returned from the Stream api\n *\n * @category DataType\n */\nvar EvmStreamResult = /** @class */function () {\n  function EvmStreamResult(data, core) {\n    this._data = EvmStreamResult.parse(data, core);\n  }\n  /**\n   * Create a new instance of EvmStreamResult\n   *\n   * @param data - the EvmStreamResultish type\n   * @param core - the Core instance\n   * @example\n   * ```ts\n   * const evmStreamResult = EvmStreamResult.create(data);\n   * ```\n   * @returns an instance of EvmStreamResult\n   */\n  EvmStreamResult.create = function (data, core) {\n    if (data instanceof EvmStreamResult) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new EvmStreamResult(data, finalCore);\n  };\n  /**\n   * Compares two EvmStreamResult data. It checks a deep equality check of both values.\n   * @param valueA - the first EvmStreamResultish data to compare\n   * @param valueB - the second EvmStreamResultish data to compare\n   * @returns true if the values are equal, false otherwise\n   * @example\n   * ```ts\n   *  EvmStreamResult.equals(valueA, valueB);\n   * ```\n   */\n  EvmStreamResult.equals = function (valueA, valueB) {\n    var evmStreamResultA = EvmStreamResult.create(valueA);\n    var evmStreamResultB = EvmStreamResult.create(valueB);\n    if (!evmStreamResultA.chain.equals(evmStreamResultB.chain)) {\n      return false;\n    }\n    if (!evmStreamResultA.block.equals(evmStreamResultB.block)) {\n      return false;\n    }\n    if (evmStreamResultA.streamId !== evmStreamResultB.streamId) {\n      return false;\n    }\n    if (evmStreamResultA.tag !== evmStreamResultB.tag) {\n      return false;\n    }\n    if (evmStreamResultA.confirmed !== evmStreamResultB.confirmed) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Compares an EvmStreamResultish data to this EvmStreamResult instance.\n   * @param value - the value to compare\n   * @returns true if the value is equal to the current instance, false otherwise\n   * @example\n   * ```ts\n   * evmStreamResult.equals(value);\n   * ```\n   */\n  EvmStreamResult.prototype.equals = function (value) {\n    return EvmStreamResult.equals(this, value);\n  };\n  /**\n   * Converts the EvmStreamResult instance to a JSON object.\n   * @returns JSON object of the EvmStreamResult instance\n   * @example `evmStreamResult.toJSON()`\n   */\n  EvmStreamResult.prototype.toJSON = function () {\n    return EvmStreamResultFormatter_1.EvmStreamResultFormatter.toJSON(this._data);\n  };\n  /**\n   * Converts the EvmStreamResult instance to a JSON object.\n   * @returns JSON object of the EvmStreamResult instance\n   * @example `evmStreamResult.format()`\n   */\n  EvmStreamResult.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(EvmStreamResult.prototype, \"abiInterface\", {\n    get: function () {\n      if (!this.abi || !this.abi.length) {\n        return null;\n      }\n      return new abi_1.Interface(this.abi);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"decodedLogs\", {\n    get: function () {\n      var abiInterface = this.abiInterface;\n      if (!abiInterface) {\n        return [];\n      }\n      return this.logs.map(function (log) {\n        return abiInterface.parseLog({\n          data: log.data,\n          topics: [log.topic0, log.topic1, log.topic2, log.topic3].filter(isNotEmpty)\n        });\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"chain\", {\n    get: function () {\n      return this._data.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"streamId\", {\n    get: function () {\n      return this._data.streamId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"tag\", {\n    get: function () {\n      return this._data.tag;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"block\", {\n    get: function () {\n      return this._data.block;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"retries\", {\n    get: function () {\n      return this._data.retries;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"confirmed\", {\n    get: function () {\n      return this._data.confirmed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"erc20Approvals\", {\n    get: function () {\n      return this._data.erc20Approvals;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"erc20Transfers\", {\n    get: function () {\n      return this._data.erc20Transfers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"logs\", {\n    get: function () {\n      return this._data.logs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"nftApprovals\", {\n    get: function () {\n      return this._data.nftApprovals;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"nftTransfers\", {\n    get: function () {\n      return this._data.nftTransfers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"txs\", {\n    get: function () {\n      return this._data.txs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"txsInternal\", {\n    get: function () {\n      return this._data.txsInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"abi\", {\n    get: function () {\n      return this._data.abi;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmStreamResult.prototype, \"nativeBalances\", {\n    get: function () {\n      return this._data.nativeBalances;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EvmStreamResult.parse = function (data, core) {\n    return EvmStreamResultParser_1.EvmStreamResultParser.parse(data, core);\n  };\n  return EvmStreamResult;\n}();\nexports.EvmStreamResult = EvmStreamResult;\nvar isNotEmpty = function (value) {\n  return value != null;\n};","map":{"version":3,"mappings":"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","names":["data","core","_data","EvmStreamResult","parse","finalCore","common_core_1","getDefault","valueA","valueB","evmStreamResultA","create","evmStreamResultB","chain","equals","block","streamId","tag","confirmed","value","EvmStreamResultFormatter_1","toJSON","Object","abi","length","abi_1","abiInterface","logs","map","log","parseLog","topics","topic0","topic1","topic2","topic3","filter","isNotEmpty","retries","erc20Approvals","erc20Transfers","nftApprovals","nftTransfers","txs","txsInternal","nativeBalances","exports"],"sources":["../../../src/dataTypes/EvmStreamResult/EvmStreamResult.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}