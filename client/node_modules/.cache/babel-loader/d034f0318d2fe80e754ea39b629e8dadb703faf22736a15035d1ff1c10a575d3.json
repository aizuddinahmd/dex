{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AptosNetwork = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar aptosNetworkNames = ['mainnet', 'testnet', 'devnet'];\nvar aptosChainIdToNetworkNames = {\n  '1': 'mainnet',\n  '2': 'testnet'\n};\n/**\n * A representation of a Aptos network.\n *\n * @category DataType\n */\nvar AptosNetwork = /** @class */function () {\n  function AptosNetwork(network) {\n    this.network = network;\n  }\n  Object.defineProperty(AptosNetwork, \"MAINNET\", {\n    /**\n     * Returns MAINNET network\n     *\n     * @example AptosNetwork.MAINNET\n     */\n    get: function () {\n      return AptosNetwork.create('mainnet');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AptosNetwork, \"TESTNET\", {\n    /**\n     * Returns TESTNET network\n     *\n     * @example AptosNetwork.MAINNET\n     */\n    get: function () {\n      return AptosNetwork.create('testnet');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AptosNetwork, \"DEVNET\", {\n    /**\n     * Returns DEVNET network\n     *\n     * @example AptosNetwork.MAINNET\n     */\n    get: function () {\n      return AptosNetwork.create('devnet');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Create a new instance of AptosNetwork from any valid network input.\n   *\n   * @example `const network = AptosNetwork.create(\"mainnet\")`\n   * @throws an error when a passed network is invalid.\n   */\n  AptosNetwork.create = function (network) {\n    return network instanceof AptosNetwork ? network : new AptosNetwork(AptosNetwork.parse(network));\n  };\n  AptosNetwork.parse = function (network) {\n    var _a;\n    if (typeof network !== 'string') {\n      throw new common_core_1.CoreError({\n        code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n        message: \"Aptos network is not supported: \".concat(network)\n      });\n    }\n    var networkName = (_a = aptosChainIdToNetworkNames[network]) !== null && _a !== void 0 ? _a : network;\n    if (!aptosNetworkNames.includes(networkName)) {\n      throw new common_core_1.CoreError({\n        code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n        message: \"Aptos network is not supported: \".concat(network)\n      });\n    }\n    return networkName;\n  };\n  /**\n   * Formats the network to a specific format.\n   * Currently returns a string representing the network.\n   * @example network.format(); // \"mainnet\"\n   */\n  AptosNetwork.prototype.format = function () {\n    // TODO: add `format` argument\n    return this.network;\n  };\n  /**\n   * Checks the equality of the current network with another Aptos network.\n   * @example `network.equals(\"mainnet\")`\n   * @example `network.equals(AptosNetwork.create(\"mainnet\"))`\n   */\n  AptosNetwork.prototype.equals = function (network) {\n    return this.network === AptosNetwork.create(network).network;\n  };\n  /**\n   * @returns a string representing the network.\n   * @example network.toJSON(); // \"mainnet\"\n   */\n  AptosNetwork.prototype.toJSON = function () {\n    return this.network;\n  };\n  /**\n   * @returns a string representing the network.\n   * @example network.toString(); // \"mainnet\"\n   */\n  AptosNetwork.prototype.toString = function () {\n    return this.network;\n  };\n  return AptosNetwork;\n}();\nexports.AptosNetwork = AptosNetwork;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA,IAAMA,iBAAiB,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAU;AACnE,IAAMC,0BAA0B,GAAqC;EACnE,GAAG,EAAE,SAAS;EACd,GAAG,EAAE;CACN;AA4BD;;;;;AAKA;EAyDE,sBAAoCC,OAAyB;IAAzB,YAAO,GAAPA,OAAO;EAAqB;EAnDhEC,sBAAkBC,uBAAO;IALzB;;;;;SAKA;MACE,OAAOA,YAAY,CAACC,MAAM,CAAC,SAAS,CAAC;IACvC,CAAC;;;;EAMDF,sBAAkBC,uBAAO;IALzB;;;;;SAKA;MACE,OAAOA,YAAY,CAACC,MAAM,CAAC,SAAS,CAAC;IACvC,CAAC;;;;EAODF,sBAAkBC,sBAAM;IALxB;;;;;SAKA;MACE,OAAOA,YAAY,CAACC,MAAM,CAAC,QAAQ,CAAC;IACtC,CAAC;;;;EAED;;;;;;EAMcD,mBAAM,GAApB,UAAqBF,OAAwB;IAC3C,OAAOA,OAAO,YAAYE,YAAY,GAAGF,OAAO,GAAG,IAAIE,YAAY,CAACA,YAAY,CAACE,KAAK,CAACJ,OAAO,CAAC,CAAC;EAClG,CAAC;EAEcE,kBAAK,GAApB,UAAqBF,OAA4B;;IAC/C,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC/B,MAAM,IAAIK,uBAAS,CAAC;QAClBC,IAAI,EAAED,2BAAa,CAACE,gBAAgB;QACpCC,OAAO,EAAE,0CAAmCR,OAAO;OACpD,CAAC;;IAGJ,IAAMS,WAAW,GAAG,gCAA0B,CAACT,OAAO,CAAC,mCAAIA,OAAO;IAElE,IAAI,CAACF,iBAAiB,CAACY,QAAQ,CAACD,WAA+B,CAAC,EAAE;MAChE,MAAM,IAAIJ,uBAAS,CAAC;QAClBC,IAAI,EAAED,2BAAa,CAACE,gBAAgB;QACpCC,OAAO,EAAE,0CAAmCR,OAAO;OACpD,CAAC;;IAGJ,OAAOS,WAA+B;EACxC,CAAC;EAID;;;;;EAKOP,6BAAM,GAAb;IACE;IACA,OAAO,IAAI,CAACF,OAAO;EACrB,CAAC;EAED;;;;;EAKOE,6BAAM,GAAb,UAAcF,OAAwB;IACpC,OAAO,IAAI,CAACA,OAAO,KAAKE,YAAY,CAACC,MAAM,CAACH,OAAO,CAAC,CAACA,OAAO;EAC9D,CAAC;EAED;;;;EAIOE,6BAAM,GAAb;IACE,OAAO,IAAI,CAACF,OAAO;EACrB,CAAC;EAED;;;;EAIOE,+BAAQ,GAAf;IACE,OAAO,IAAI,CAACF,OAAO;EACrB,CAAC;EACH,mBAAC;AAAD,CAAC,EA7FD;AAAaW","names":["aptosNetworkNames","aptosChainIdToNetworkNames","network","Object","AptosNetwork","create","parse","common_core_1","code","INVALID_ARGUMENT","message","networkName","includes","exports"],"sources":["../../../src/dataTypes/AptosNetwork/AptosNetwork.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}