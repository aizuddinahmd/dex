{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmBlock = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\nvar EvmTransaction_1 = require(\"../EvmTransaction\");\nvar EvmSimpleBlock_1 = require(\"./EvmSimpleBlock\");\n/**\n * The EvmBlock is a representation of a block.\n *\n * @category DataType\n */\nvar EvmBlock = /** @class */function () {\n  function EvmBlock(data, core) {\n    this._data = EvmBlock.parse(data, core);\n  }\n  /**\n   * Create a new instance of EvmBlock from any valid transaction input\n   * @param data - the EvmBlockish type\n   * @example const transaction = EvmTransaction.create(data);\n   */\n  EvmBlock.create = function (data, core) {\n    if (data instanceof EvmBlock) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new EvmBlock(data, finalCore);\n  };\n  /**\n   * Check the equality between two Evm blocks. It compares their hashes and blocks.\n   * @param dataA - The first block to compare\n   * @param dataB - The second block to compare\n   * @example EvmTransaction.equals(dataA, dataB)\n   */\n  EvmBlock.equals = function (dataA, dataB) {\n    var blockA = EvmSimpleBlock_1.EvmSimpleBlock.create(dataA);\n    var blockB = EvmSimpleBlock_1.EvmSimpleBlock.create(dataB);\n    if (!blockA.chain.equals(blockB.chain)) {\n      return false;\n    }\n    if (blockA.hash !== blockB.hash) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Checks the equality of the current block with another evm block\n   * @param data - the block to compare with\n   * @example\n   * ```ts\n   * block.equals(data)\n   * ```\n   */\n  EvmBlock.prototype.equals = function (data) {\n    return EvmBlock.equals(this, data);\n  };\n  /**\n   * @returns a JSON represention of the block.\n   * @example\n   * ```\n   * block.toJSON()\n   * ```\n   */\n  EvmBlock.prototype.toJSON = function () {\n    var data = this._data;\n    return __assign(__assign({}, data), {\n      number: data.number.toString(),\n      difficulty: data.difficulty.toString(),\n      totalDifficulty: data.totalDifficulty.toString(),\n      size: data.size.toString(),\n      gasLimit: data.gasLimit.toString(),\n      gasUsed: data.gasUsed.toString(),\n      chain: data.chain.format(),\n      miner: data.miner.format(),\n      transactions: data.transactions.map(function (transaction) {\n        return transaction.toJSON();\n      })\n    });\n  };\n  /**\n   * @returns a JSON represention of the block.\n   * @example\n   * ```\n   * block.format()\n   * ```\n   */\n  EvmBlock.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(EvmBlock.prototype, \"result\", {\n    /**\n     * @returns all the data without casting it to JSON.\n     * @example block.result\n     */\n    get: function () {\n      return this._data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"number\", {\n    /**\n     * @returns the block number.\n     * @example block.number // BigNumber\n     */\n    get: function () {\n      return this._data.number;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"hash\", {\n    /**\n     * @returns the block hash.\n     * @example block.hash // \"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171\"\n     */\n    get: function () {\n      return this._data.hash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"timestamp\", {\n    /**\n     * @returns the block timestamp.\n     * @example block.timestamp // Date\n     */\n    get: function () {\n      return this._data.timestamp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"miner\", {\n    /**\n     * @returns the block miner.\n     * @example block.miner // EvmAddress\n     */\n    get: function () {\n      return this._data.miner;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"difficulty\", {\n    /**\n     * @returns the block difficulty.\n     * @example block.difficulty // BigNumber\n     */\n    get: function () {\n      return this._data.difficulty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"totalDifficulty\", {\n    /**\n     * @returns the block total difficulty.\n     * @example block.totalDifficulty // BigNumber\n     */\n    get: function () {\n      return this._data.totalDifficulty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"size\", {\n    /**\n     * @returns the block size.\n     * @example block.size // BigNumber\n     */\n    get: function () {\n      return this._data.size;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"gasLimit\", {\n    /**\n     * @returns the block gas limit.\n     * @example block.gasLimit // BigNumber\n     */\n    get: function () {\n      return this._data.gasLimit;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"gasUsed\", {\n    /**\n     * @returns the block gas used.\n     * @example block.gasUsed // BigNumber\n     */\n    get: function () {\n      return this._data.gasUsed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"transactions\", {\n    /**\n     * @returns the block transactions.\n     * @example block.transactions // EvmTransaction[]\n     */\n    get: function () {\n      return this._data.transactions;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"chain\", {\n    /**\n     * @returns the block chain.\n     * @example block.chain // EvmChain\n     */\n    get: function () {\n      return this._data.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"transactionCount\", {\n    /**\n     * @returns the block transaction count.\n     * @example block.transactionCount // 252\n     */\n    get: function () {\n      return this._data.transactionCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"transactionsRoot\", {\n    /**\n     * @returns the block transactions root.\n     * @example block.transactionsRoot // \"0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27\"\n     */\n    get: function () {\n      return this._data.transactionsRoot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"stateRoot\", {\n    /**\n     * @returns the block state root.\n     * @example block.stateRoot // \"0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b\"\n     */\n    get: function () {\n      return this._data.stateRoot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"receiptsRoot\", {\n    /**\n     * @returns the block receipts root.\n     * @example block.receiptsRoot // \"0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23\"\n     */\n    get: function () {\n      return this._data.receiptsRoot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"logsBloom\", {\n    /**\n     * @returns the block logs bloom.\n     * @example block.logsBloom // \"0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf\"\n     */\n    get: function () {\n      return this._data.logsBloom;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"extraData\", {\n    /**\n     * @returns the block extra data.\n     * @example block.extraData // \"0x65746865726d696e652d6575726f70652d7765737433\"\n     */\n    get: function () {\n      return this._data.extraData;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"parentHash\", {\n    /**\n     * @returns the block parent hash.\n     * @example block.parentHash // \"0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045\"\n     */\n    get: function () {\n      return this._data.parentHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"sha3Uncles\", {\n    /**\n     * @returns the block sha3Uncles.\n     * @example block.sha3Uncles // \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\"\n     */\n    get: function () {\n      return this._data.sha3Uncles;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmBlock.prototype, \"nonce\", {\n    /**\n     * @returns the block nonce.\n     * @example block.nonce // \"0xedeb2d8fd2b2bdec\"\n     */\n    get: function () {\n      return this._data.nonce;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EvmBlock.parse = function (data, core) {\n    return __assign(__assign({}, data), {\n      miner: EvmAddress_1.EvmAddress.create(data.miner, core),\n      timestamp: (0, common_core_1.dateInputToDate)(data.timestamp),\n      number: common_core_1.BigNumber.create(data.number),\n      difficulty: common_core_1.BigNumber.create(data.difficulty),\n      totalDifficulty: common_core_1.BigNumber.create(data.totalDifficulty),\n      size: common_core_1.BigNumber.create(data.size),\n      gasLimit: common_core_1.BigNumber.create(data.gasLimit),\n      gasUsed: common_core_1.BigNumber.create(data.gasUsed),\n      transactions: data.transactions.map(function (transaction) {\n        return EvmTransaction_1.EvmTransaction.create(transaction, core);\n      }),\n      chain: EvmChain_1.EvmChain.create(data.chain, core),\n      transactionCount: +data.transactionCount\n    });\n  };\n  return EvmBlock;\n}();\nexports.EvmBlock = EvmBlock;","map":{"version":3,"mappings":"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","names":["data","core","_data","EvmBlock","parse","finalCore","common_core_1","getDefault","dataA","dataB","blockA","EvmSimpleBlock_1","create","blockB","chain","equals","hash","number","toString","difficulty","totalDifficulty","size","gasLimit","gasUsed","format","miner","transactions","map","transaction","toJSON","Object","timestamp","transactionCount","transactionsRoot","stateRoot","receiptsRoot","logsBloom","extraData","parentHash","sha3Uncles","nonce","EvmAddress_1","EvmChain_1","exports"],"sources":["../../../src/dataTypes/EvmBlock/EvmBlock.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}