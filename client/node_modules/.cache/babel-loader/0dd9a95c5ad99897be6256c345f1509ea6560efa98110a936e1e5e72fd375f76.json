{"ast":null,"code":"import { InjectedConnector } from \"./chunk-N7MKKIYR.js\";\nimport { __privateAdd, __privateGet, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\";\n\n// src/metaMask.ts\nimport { ConnectorNotFoundError, ResourceUnavailableError, UserRejectedRequestError, getClient } from \"@wagmi/core\";\nimport { getAddress } from \"ethers/lib/utils.js\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor() {\n    let {\n      chains,\n      options: options_\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider() {\n        function getReady(ethereum2) {\n          const isMetaMask = !!ethereum2?.isMetaMask;\n          if (!isMetaMask) return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state) return;\n          if (ethereum2.isApexWallet) return;\n          if (ethereum2.isAvalanche) return;\n          if (ethereum2.isKuCoinWallet) return;\n          if (ethereum2.isPortal) return;\n          if (ethereum2.isTokenPocket) return;\n          if (ethereum2.isTokenary) return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\") return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers) return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      },\n      ...options_\n    };\n    super({\n      chains,\n      options\n    });\n    __publicField(this, \"id\", \"metaMask\");\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected) try {\n          await provider.request({\n            method: \"wallet_requestPermissions\",\n            params: [{\n              eth_accounts: {}\n            }]\n          });\n          account = await this.getAccount();\n        } catch (error) {\n          if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n        }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect) getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) throw new UserRejectedRequestError(error);\n      if (error.code === -32002) throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport { MetaMaskConnector };","map":{"version":3,"names":["InjectedConnector","__privateAdd","__privateGet","__privateSet","__publicField","ConnectorNotFoundError","ResourceUnavailableError","UserRejectedRequestError","getClient","getAddress","_UNSTABLE_shimOnConnectSelectAccount","MetaMaskConnector","constructor","chains","options","options_","name","shimDisconnect","shimChainChangedDisconnect","getProvider","getReady","ethereum2","isMetaMask","isBraveWallet","_events","_state","isApexWallet","isAvalanche","isKuCoinWallet","isPortal","isTokenPocket","isTokenary","window","ethereum","providers","find","UNSTABLE_shimOnConnectSelectAccount","connect","chainId","provider","on","onAccountsChanged","onChainChanged","onDisconnect","emit","type","account","storage","getItem","shimDisconnectKey","getAccount","catch","isConnected","request","method","params","eth_accounts","error","isUserRejectedRequestError","accounts","id","getChainId","unsupported","isChainUnsupported","chain","switchChain","setItem","code","WeakMap"],"sources":["/Users/judin_arimz/Desktop/SkolaLab/dex/client/node_modules/@wagmi/connectors/dist/metaMask.js"],"sourcesContent":["import {\n  InjectedConnector\n} from \"./chunk-N7MKKIYR.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/metaMask.ts\nimport {\n  ConnectorNotFoundError,\n  ResourceUnavailableError,\n  UserRejectedRequestError,\n  getClient\n} from \"@wagmi/core\";\nimport { getAddress } from \"ethers/lib/utils.js\";\nvar _UNSTABLE_shimOnConnectSelectAccount;\nvar MetaMaskConnector = class extends InjectedConnector {\n  constructor({\n    chains,\n    options: options_\n  } = {}) {\n    const options = {\n      name: \"MetaMask\",\n      shimDisconnect: true,\n      shimChainChangedDisconnect: true,\n      getProvider() {\n        function getReady(ethereum2) {\n          const isMetaMask = !!ethereum2?.isMetaMask;\n          if (!isMetaMask)\n            return;\n          if (ethereum2.isBraveWallet && !ethereum2._events && !ethereum2._state)\n            return;\n          if (ethereum2.isApexWallet)\n            return;\n          if (ethereum2.isAvalanche)\n            return;\n          if (ethereum2.isKuCoinWallet)\n            return;\n          if (ethereum2.isPortal)\n            return;\n          if (ethereum2.isTokenPocket)\n            return;\n          if (ethereum2.isTokenary)\n            return;\n          return ethereum2;\n        }\n        if (typeof window === \"undefined\")\n          return;\n        const ethereum = window.ethereum;\n        if (ethereum?.providers)\n          return ethereum.providers.find(getReady);\n        return getReady(ethereum);\n      },\n      ...options_\n    };\n    super({ chains, options });\n    __publicField(this, \"id\", \"metaMask\");\n    __privateAdd(this, _UNSTABLE_shimOnConnectSelectAccount, void 0);\n    __privateSet(this, _UNSTABLE_shimOnConnectSelectAccount, options.UNSTABLE_shimOnConnectSelectAccount);\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      if (!provider)\n        throw new ConnectorNotFoundError();\n      if (provider.on) {\n        provider.on(\"accountsChanged\", this.onAccountsChanged);\n        provider.on(\"chainChanged\", this.onChainChanged);\n        provider.on(\"disconnect\", this.onDisconnect);\n      }\n      this.emit(\"message\", { type: \"connecting\" });\n      let account = null;\n      if (__privateGet(this, _UNSTABLE_shimOnConnectSelectAccount) && this.options?.shimDisconnect && !getClient().storage?.getItem(this.shimDisconnectKey)) {\n        account = await this.getAccount().catch(() => null);\n        const isConnected = !!account;\n        if (isConnected)\n          try {\n            await provider.request({\n              method: \"wallet_requestPermissions\",\n              params: [{ eth_accounts: {} }]\n            });\n            account = await this.getAccount();\n          } catch (error) {\n            if (this.isUserRejectedRequestError(error))\n              throw new UserRejectedRequestError(error);\n          }\n      }\n      if (!account) {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\"\n        });\n        account = getAddress(accounts[0]);\n      }\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      if (this.options?.shimDisconnect)\n        getClient().storage?.setItem(this.shimDisconnectKey, true);\n      return { account, chain: { id, unsupported }, provider };\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error))\n        throw new UserRejectedRequestError(error);\n      if (error.code === -32002)\n        throw new ResourceUnavailableError(error);\n      throw error;\n    }\n  }\n};\n_UNSTABLE_shimOnConnectSelectAccount = new WeakMap();\nexport {\n  MetaMaskConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}