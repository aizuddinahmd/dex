{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertUnreachable = exports.UnreachableError = void 0;\nvar Error_1 = require(\"../Error\");\nexports.UnreachableError = new Error_1.CoreError({\n  code: Error_1.CoreErrorCode.GENERIC_CORE_ERROR,\n  message: \"Incorrect type provided, code should not reach here\"\n});\n/**\n * Typesafe check, to make sure that code never reaches a certain point.\n * Can be used as an exhaustive check in swtich/if-else statements\n *\n * When used properly with Typescript, this code should never reach, as it is typed as 'never'\n *\n * If the code does reach this assertion an UnreachableError is thrown\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar assertUnreachable = function (x) {\n  throw exports.UnreachableError;\n};\nexports.assertUnreachable = assertUnreachable;","map":{"version":3,"mappings":";;;;;;AAAA;AAEaA,wBAAgB,GAAG,IAAIC,iBAAS,CAAC;EAC5CC,IAAI,EAAED,qBAAa,CAACE,kBAAkB;EACtCC,OAAO,EAAE;CACV,CAAC;AAEF;;;;;;;;AAQA;AACO,IAAMC,iBAAiB,GAAG,UAACC,CAAQ;EACxC,MAAMN,wBAAgB;AACxB,CAAC;AAFYA,yBAAiB","names":["exports","Error_1","code","GENERIC_CORE_ERROR","message","assertUnreachable","x"],"sources":["../../src/Assert/assertUnreachable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}