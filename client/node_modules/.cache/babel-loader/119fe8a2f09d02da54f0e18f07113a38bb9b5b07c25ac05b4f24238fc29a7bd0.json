{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmChain = void 0;\nvar chaindata_1 = require(\"../../data/chaindata\");\nvar EvmChainParser_1 = require(\"./EvmChainParser\");\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar CommonEvmUtilsConfig_1 = require(\"../../config/CommonEvmUtilsConfig\");\n/**\n * The EvmChain class is a MoralisData that references to a EVM chain\n * @category DataType\n */\nvar EvmChain = /** @class */function () {\n  function EvmChain(value, config) {\n    var _this = this;\n    var _a;\n    this.config = config;\n    this._value = EvmChainParser_1.EvmChainParser.parse(value);\n    this._chainlistData = (_a = chaindata_1.chainList.find(function (chainData) {\n      return chainData.chainId === _this.decimal;\n    })) !== null && _a !== void 0 ? _a : null;\n  }\n  Object.defineProperty(EvmChain, \"ETHEREUM\", {\n    /**\n     * Returns ETHEREUM chain\n     *\n     * @example EvmChain.ETHEREUM\n     */\n    get: function () {\n      return EvmChain.create(1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"GOERLI\", {\n    /**\n     * Returns GOERLI chain\n     *\n     * @example EvmChain.GOERLI\n     */\n    get: function () {\n      return EvmChain.create(5);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"SEPOLIA\", {\n    /**\n     * Returns SEPOLIA chain\n     *\n     * @example EvmChain.SEPOLIA\n     */\n    get: function () {\n      return EvmChain.create(11155111);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"POLYGON\", {\n    /**\n     * Returns POLYGON chain\n     *\n     * @example EvmChain.POLYGON\n     */\n    get: function () {\n      return EvmChain.create(137);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"MUMBAI\", {\n    /**\n     * Returns MUMBAI chain\n     *\n     * @example EvmChain.MUMBAI\n     */\n    get: function () {\n      return EvmChain.create(80001);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"BSC\", {\n    /**\n     * Returns BSC chain\n     *\n     * @example EvmChain.BSC\n     */\n    get: function () {\n      return EvmChain.create(56);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"BSC_TESTNET\", {\n    /**\n     * Returns BSC_TESTNET chain\n     *\n     * @example EvmChain.BSC_TESTNET\n     */\n    get: function () {\n      return EvmChain.create(97);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"AVALANCHE\", {\n    /**\n     * Returns AVALANCHE chain\n     *\n     * @example EvmChain.AVALANCHE\n     */\n    get: function () {\n      return EvmChain.create(43114);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"FUJI\", {\n    /**\n     * Returns FUJI chain\n     *\n     * @example EvmChain.FUJI\n     */\n    get: function () {\n      return EvmChain.create(43113);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"FANTOM\", {\n    /**\n     * Returns FANTOM chain\n     *\n     * @example EvmChain.FANTOM\n     */\n    get: function () {\n      return EvmChain.create(250);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"CRONOS\", {\n    /**\n     * Returns CRONOS chain\n     *\n     * @example EvmChain.CRONOS\n     */\n    get: function () {\n      return EvmChain.create(25);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"CRONOS_TESTNET\", {\n    /**\n     * Returns CRONOS_TESTNET chain\n     *\n     * @example EvmChain.CRONOS_TESTNET\n     */\n    get: function () {\n      return EvmChain.create(338);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"PALM\", {\n    /**\n     * Returns PALM chain\n     *\n     * @example EvmChain.PALM\n     */\n    get: function () {\n      return EvmChain.create(11297108109);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain, \"ARBITRUM\", {\n    /**\n     * Returns ARBITRUM chain\n     *\n     * @example EvmChain.ARBITRUM\n     */\n    get: function () {\n      return EvmChain.create(42161);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Create a new instance of EvmChain from any valid address input.\n   *\n   * @example\n   * ```ts\n   * const chain = EvmChain.create(1)\n   * const chain = EvmChain.create(\"0x3\")\n   * ```\n   */\n  EvmChain.create = function (chain, core) {\n    if (chain instanceof EvmChain) {\n      return chain;\n    }\n    var c = core || common_core_1.CoreProvider.getDefault();\n    return new EvmChain(chain, c.config);\n  };\n  // Getter to return _chainlistData and throws an error if it is not defined\n  EvmChain.prototype._getChainlistData = function () {\n    if (!this._chainlistData) {\n      return null;\n    }\n    return this._chainlistData;\n  };\n  /**\n   * Compares if 2 chains are equal, based on the chainId\n   *\n   * @param chainA - The first chain to compare\n   * @param chainB - The second chain to compare\n   *\n   * @returns true if the chains are equal, false otherwise\n   * @example\n   * ```ts\n   * EvmChain.equals(\"1\", \"0x1\")\n   * ```\n   */\n  EvmChain.equals = function (chainA, chainB) {\n    return EvmChain.create(chainA)._value === EvmChain.create(chainB)._value;\n  };\n  /**\n   * Compares if the current chain is equal to the provided chain, based on the chainId\n   * @param chain - The chain to compare to\n   * @returns true if the chains are equal, false otherwise\n   * @example\n   * ```ts\n   * chain.equals(EvmChain.ETHEREUM)\n   * ```\n   */\n  EvmChain.prototype.equals = function (chain) {\n    return EvmChain.equals(this, chain);\n  };\n  /**\n   * Formats the chain to the given output; in decimal value or as hex-string.\n   * The default formatting can be set in MoralisConfig\n   * @param _formatStyle - The output format to use\n   * @example chain.format() // 1\n   * @example chain.format('hex') // \"0x1\"\n   * @example chain.format('decimal') // 1\n   *\n   * @returns The formatted chain\n   */\n  EvmChain.prototype.format = function (_formatStyle) {\n    var formatStyle = _formatStyle !== null && _formatStyle !== void 0 ? _formatStyle : this.config.get(CommonEvmUtilsConfig_1.CommonEvmUtilsConfig.formatEvmChainId);\n    if (formatStyle === 'decimal') {\n      return this.decimal;\n    }\n    if (formatStyle === 'hex') {\n      return this.hex;\n    }\n    return (0, common_core_1.assertUnreachable)(formatStyle);\n  };\n  /**\n   * Displays the chain hex-string representation of the chain and also the chain name if not null\n   *\n   * @example chain.display() // \"Ethereum (0x1)\" | \"0x1\"\n   */\n  EvmChain.prototype.display = function () {\n    return this.name ? \"\".concat(this.name, \" (\").concat(this.hex, \")\") : this.hex;\n  };\n  /**\n   * This function returns the explorer url of a block, transaction, account or token.\n   *\n   * @param value - An object containing the `block`, `transaction`, `account` or `erc20` to get the explorer url for.\n   *\n   * @example chain.getExplorerUrl({ block: 'block_here' }) // \"https://etherscan.io/block/block_here\"\n   * @example chain.getExplorerUrl({ transaction: 'some_transaction' }) // \"https://etherscan.io/tx/some_transaction\"\n   * @example chain.getExplorerUrl({ account: 'accoun_here' }) // \"https://etherscan.io/address/accoun_here\"\n   * @example chain.getExplorerUrl({ erc20: 'token_here' }) // \"https://etherscan.io/token/token_here\"\n   */\n  EvmChain.prototype.getExplorerPath = function (value) {\n    var explorer = this.explorer;\n    if (!explorer || explorer.standard !== 'EIP3091') {\n      return null;\n    }\n    var url = explorer.url;\n    // See https://eips.ethereum.org/EIPS/eip-3091 for paths\n    if ('block' in value) {\n      return \"\".concat(url, \"/block/\").concat(value.block);\n    }\n    if ('transaction' in value) {\n      return \"\".concat(url, \"/tx/\").concat(value.transaction);\n    }\n    if ('account' in value) {\n      return \"\".concat(url, \"/address/\").concat(value.account);\n    }\n    if ('erc20' in value) {\n      return \"\".concat(url, \"/token/\").concat(value.erc20);\n    }\n    return null;\n  };\n  Object.defineProperty(EvmChain.prototype, \"decimal\", {\n    /**\n     * Returns the decimal representation of the chain\n     * @example chain.decimal // 1\n     */\n    get: function () {\n      return parseInt(this._value, 16);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"hex\", {\n    /**\n     * Returns the hex-string representation of the chain\n     * @example chain.hex // \"0x1\"\n     */\n    get: function () {\n      return this._value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"apiHex\", {\n    /**\n     * Validate and cast to api compatible hex\n     *\n     * @example chain.apiHex // \"0x1\"\n     */\n    get: function () {\n      return this._value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"name\", {\n    /**\n     * Returns the name of the chain\n     * @example chain.name // \"Ethereum\"\n     */\n    get: function () {\n      var _a;\n      return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"currency\", {\n    /**\n     * Returns the currency of the chain\n     * @returns The cuurrency of the chain or undefined if not found\n     *\n     * @example chain.currency // EvmNativeCurrency\n     */\n    get: function () {\n      var _a;\n      return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.nativeCurrency;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"rpcUrls\", {\n    /**\n     * Returns the rpc Urls of the chain\n     *\n     * @example chain.rpcUrls // [\"https://mainnet.infura.io/v3/<infura-key>\"]\n     */\n    get: function () {\n      var _a;\n      return (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.rpc;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmChain.prototype, \"explorer\", {\n    /**\n     * Returns the explorer Urls of the chain\n     *\n     * @example chain.explorerUrls // [\"https://etherscan.io/\"]\n     */\n    get: function () {\n      var _a;\n      var explorers = (_a = this._getChainlistData()) === null || _a === void 0 ? void 0 : _a.explorers;\n      if (!explorers || explorers.length === 0) {\n        return null;\n      }\n      return explorers[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return EvmChain;\n}();\nexports.EvmChain = EvmChain;","map":{"version":3,"mappings":"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","names":["value","config","_value","EvmChainParser_1","parse","_chainlistData","find","chainData","chainId","_this","decimal","Object","EvmChain","create","chain","core","c","common_core_1","getDefault","chainA","chainB","equals","_formatStyle","formatStyle","get","CommonEvmUtilsConfig_1","formatEvmChainId","hex","name","explorer","standard","url","block","transaction","account","erc20","parseInt","_getChainlistData","nativeCurrency","rpc","explorers","length","exports"],"sources":["../../../src/dataTypes/EvmChain/EvmChain.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}