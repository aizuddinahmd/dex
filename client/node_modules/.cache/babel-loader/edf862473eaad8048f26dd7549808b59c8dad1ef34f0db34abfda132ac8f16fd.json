{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWalletTokenBalancesOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get token balances for a specific wallet address. */\nexports.getWalletTokenBalancesOperation = {\n  method: 'GET',\n  name: 'getWalletTokenBalances',\n  id: 'getWalletTokenBalances',\n  groupName: 'token',\n  urlPathPattern: '/{address}/erc20',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'toBlock', 'tokenAddresses'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    to_block: (0, common_core_1.maybe)(request.toBlock, String),\n    token_addresses: (0, common_core_1.maybe)(request.tokenAddresses, function (addresses) {\n      return addresses.map(function (address) {\n        return dataTypes_1.EvmAddress.create(address, core).lowercase;\n      });\n    }),\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  return (jsonResponse !== null && jsonResponse !== void 0 ? jsonResponse : []).map(function (token) {\n    return dataTypes_1.Erc20Value.create(token.balance, {\n      decimals: token.decimals,\n      token: {\n        decimals: token.decimals,\n        name: token.name,\n        symbol: token.symbol,\n        contractAddress: token.token_address,\n        logo: token.logo,\n        thumbnail: token.thumbnail,\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core)\n      }\n    }, core);\n  });\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    tokenAddresses: (0, common_core_1.maybe)(request.tokenAddresses, function (addresses) {\n      return addresses.map(function (address) {\n        return dataTypes_1.EvmAddress.create(address, core).checksum;\n      });\n    }),\n    address: dataTypes_1.EvmAddress.create(request.address).checksum,\n    toBlock: request.toBlock\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    tokenAddresses: (0, common_core_1.maybe)(jsonRequest.tokenAddresses, function (addresses) {\n      return addresses.map(function (address) {\n        return dataTypes_1.EvmAddress.create(address, core);\n      });\n    }),\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    toBlock: jsonRequest.toBlock\n  };\n}","map":{"version":3,"mappings":"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","names":["exports","method","name","id","groupName","urlPathPattern","urlPathParamNames","urlSearchParamNames","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","to_block","toBlock","String","token_addresses","tokenAddresses","addresses","map","address","create","lowercase","dataTypes_1","jsonResponse","token","balance","decimals","symbol","contractAddress","token_address","logo","thumbnail","checksum","jsonRequest"],"sources":["../../../src/operations/token/getWalletTokenBalancesOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}