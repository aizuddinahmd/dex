{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperationRequestBuilder = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar config_1 = require(\"../config\");\nvar getCommonHeaders_1 = require(\"./getCommonHeaders\");\nvar OperationRequestBuilder = /** @class */function () {\n  function OperationRequestBuilder(operation, core) {\n    this.operation = operation;\n    this.core = core;\n  }\n  OperationRequestBuilder.prototype.prepareUrl = function (baseUrl, request) {\n    var _this = this;\n    var _a;\n    var urlParams = this.operation.getRequestUrlParams(request, this.core);\n    var urlPath = this.operation.urlPathPattern;\n    for (var _i = 0, _b = (_a = this.operation.urlPathParamNames) !== null && _a !== void 0 ? _a : []; _i < _b.length; _i++) {\n      var paramName = _b[_i];\n      var paramValue = urlParams[paramName];\n      if (paramValue === undefined || paramValue === null) {\n        throw new Error(\"Param \".concat(paramName, \" is required\"));\n      }\n      urlPath = urlPath.replace(\"{\".concat(paramName, \"}\"), paramValue);\n    }\n    var url = \"\".concat(baseUrl).concat(urlPath);\n    var urlSearchParams = {};\n    Object.keys(urlParams).filter(function (paramName) {\n      var _a;\n      return !((_a = _this.operation.urlPathParamNames) === null || _a === void 0 ? void 0 : _a.includes(paramName));\n    }).forEach(function (paramName) {\n      var paramValue = urlParams[paramName];\n      if (paramValue !== undefined && paramValue !== null) {\n        urlSearchParams[paramName] = paramValue;\n      }\n    });\n    return {\n      url: url,\n      urlSearchParams: urlSearchParams\n    };\n  };\n  OperationRequestBuilder.prototype.prepareBody = function (request) {\n    if (!this.operation.bodyType && !this.operation.getRequestBody) {\n      return undefined;\n    }\n    if (!this.operation.getRequestBody) {\n      throw new Error(\"getRequestBody is not implemented for operation \".concat(this.operation.name));\n    }\n    if (!this.operation.bodyParamNames) {\n      throw new Error(\"bodyParamNames are empty for operation \".concat(this.operation.name));\n    }\n    var body = this.operation.getRequestBody(request, this.core);\n    if (this.operation.bodyType === 'properties') {\n      return body;\n    }\n    if (this.operation.bodyType === 'raw') {\n      return body;\n    }\n    throw new Error(\"Not supported body type: \".concat(this.operation.bodyType));\n  };\n  OperationRequestBuilder.prototype.prepareHeaders = function () {\n    var apiKey = this.core.config.get(config_1.ApiUtilsConfig.apiKey);\n    var product = this.core.config.get(common_core_1.CoreConfig.product);\n    if (!apiKey) {\n      throw new common_core_1.MoralisApiError({\n        code: common_core_1.ApiErrorCode.API_KEY_NOT_SET,\n        message: 'apiKey is not set'\n      });\n    }\n    var headers = (0, getCommonHeaders_1.getCommonHeaders)();\n    headers['x-api-key'] = apiKey;\n    if (product) {\n      headers['x-moralis-product'] = product;\n    }\n    return headers;\n  };\n  return OperationRequestBuilder;\n}();\nexports.OperationRequestBuilder = OperationRequestBuilder;","map":{"version":3,"mappings":"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","names":["operation","core","OperationRequestBuilder","baseUrl","request","urlParams","getRequestUrlParams","urlPath","urlPathPattern","_b","urlPathParamNames","_i","paramName","paramValue","undefined","Error","replace","url","urlSearchParams","Object","keys","filter","includes","forEach","bodyType","getRequestBody","name","bodyParamNames","body","apiKey","config","get","config_1","product","common_core_1","code","API_KEY_NOT_SET","message","headers","exports"],"sources":["../../src/resolvers2/OperationRequestBuilder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}