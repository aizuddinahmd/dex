{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requestChallengeEvmOperation = void 0;\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\n/** The back channel challenge containing the id to store on the api and the message to be signed by the user */\nexports.requestChallengeEvmOperation = {\n  method: 'POST',\n  name: 'requestChallengeEvm',\n  id: 'requestChallengeEvm',\n  groupName: 'evm',\n  urlPathPattern: '/challenge/request/evm',\n  bodyParamNames: ['domain', 'chainId', 'address', 'statement', 'uri', 'expirationTime', 'notBefore', 'resources', 'timeout'],\n  bodyType: 'properties',\n  getRequestUrlParams: getRequestUrlParams,\n  getRequestBody: getRequestBody,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams() {\n  return {};\n}\nfunction getRequestBody(request, core) {\n  return {\n    domain: request.domain,\n    chainId: common_evm_utils_1.EvmChainResolver.resolve(request.chainId, core).hex,\n    address: common_evm_utils_1.EvmAddress.create(request.address, core).checksum,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeResponse(jsonResponse) {\n  return jsonResponse;\n}\nfunction serializeRequest(request, core) {\n  return {\n    domain: request.domain,\n    chainId: common_evm_utils_1.EvmChainResolver.resolve(request.chainId, core).decimal.toString(),\n    address: common_evm_utils_1.EvmAddress.create(request.address, core).checksum,\n    statement: request.statement,\n    uri: request.uri,\n    expirationTime: request.expirationTime,\n    notBefore: request.notBefore,\n    resources: request.resources,\n    timeout: request.timeout\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    domain: jsonRequest.domain,\n    chainId: common_evm_utils_1.EvmChainResolver.resolve(jsonRequest.chainId, core),\n    address: common_evm_utils_1.EvmAddress.create(jsonRequest.address, core),\n    statement: jsonRequest.statement,\n    uri: jsonRequest.uri,\n    expirationTime: jsonRequest.expirationTime,\n    notBefore: jsonRequest.notBefore,\n    resources: jsonRequest.resources,\n    timeout: jsonRequest.timeout\n  };\n}","map":{"version":3,"mappings":";;;;;;AACA;AA6BA;AACaA,oCAA4B,GAKrC;EACFC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE,qBAAqB;EAC3BC,EAAE,EAAE,qBAAqB;EACzBC,SAAS,EAAE,KAAK;EAChBC,cAAc,EAAE,wBAAwB;EACxCC,cAAc,EAAE,CACd,QAAQ,EACR,SAAS,EACT,SAAS,EACT,WAAW,EACX,KAAK,EACL,gBAAgB,EAChB,WAAW,EACX,WAAW,EACX,SAAS,CACV;EACDC,QAAQ,EAAE,YAAY;EAEtBC,mBAAmB;EACnBC,cAAc;EACdC,gBAAgB;EAChBC,kBAAkB;EAClBC,mBAAmB;CACpB;AAED;AAEA,SAASJ,mBAAmB;EAC1B,OAAO,EAAE;AACX;AAEA,SAASC,cAAc,CAACI,OAAmC,EAAEC,IAAU;EACrE,OAAO;IACLC,MAAM,EAAEF,OAAO,CAACE,MAAM;IACtBC,OAAO,EAAEC,mCAAgB,CAACC,OAAO,CAACL,OAAO,CAACG,OAAO,EAAEF,IAAI,CAAC,CAACK,GAAG;IAC5DC,OAAO,EAAEH,6BAAU,CAACI,MAAM,CAACR,OAAO,CAACO,OAAO,EAAEN,IAAI,CAAC,CAACQ,QAAQ;IAC1DC,SAAS,EAAEV,OAAO,CAACU,SAAS;IAC5BC,GAAG,EAAEX,OAAO,CAACW,GAAG;IAChBC,cAAc,EAAEZ,OAAO,CAACY,cAAc;IACtCC,SAAS,EAAEb,OAAO,CAACa,SAAS;IAC5BC,SAAS,EAAEd,OAAO,CAACc,SAAS;IAC5BC,OAAO,EAAEf,OAAO,CAACe;GAClB;AACH;AAEA,SAAShB,mBAAmB,CAACiB,YAA6C;EACxE,OAAOA,YAAY;AACrB;AAEA,SAASnB,gBAAgB,CAACG,OAAmC,EAAEC,IAAU;EACvE,OAAO;IACLC,MAAM,EAAEF,OAAO,CAACE,MAAM;IACtBC,OAAO,EAAEC,mCAAgB,CAACC,OAAO,CAACL,OAAO,CAACG,OAAO,EAAEF,IAAI,CAAC,CAACgB,OAAO,CAACC,QAAQ,EAAE;IAC3EX,OAAO,EAAEH,6BAAU,CAACI,MAAM,CAACR,OAAO,CAACO,OAAO,EAAEN,IAAI,CAAC,CAACQ,QAAQ;IAC1DC,SAAS,EAAEV,OAAO,CAACU,SAAS;IAC5BC,GAAG,EAAEX,OAAO,CAACW,GAAG;IAChBC,cAAc,EAAEZ,OAAO,CAACY,cAAc;IACtCC,SAAS,EAAEb,OAAO,CAACa,SAAS;IAC5BC,SAAS,EAAEd,OAAO,CAACc,SAAS;IAC5BC,OAAO,EAAEf,OAAO,CAACe;GAClB;AACH;AAEA,SAASjB,kBAAkB,CAACqB,WAA2C,EAAElB,IAAU;EACjF,OAAO;IACLC,MAAM,EAAEiB,WAAW,CAACjB,MAAM;IAC1BC,OAAO,EAAEC,mCAAgB,CAACC,OAAO,CAACc,WAAW,CAAChB,OAAO,EAAEF,IAAI,CAAC;IAC5DM,OAAO,EAAEH,6BAAU,CAACI,MAAM,CAACW,WAAW,CAACZ,OAAO,EAAEN,IAAI,CAAC;IACrDS,SAAS,EAAES,WAAW,CAACT,SAAS;IAChCC,GAAG,EAAEQ,WAAW,CAACR,GAAG;IACpBC,cAAc,EAAEO,WAAW,CAACP,cAAc;IAC1CC,SAAS,EAAEM,WAAW,CAACN,SAAS;IAChCC,SAAS,EAAEK,WAAW,CAACL,SAAS;IAChCC,OAAO,EAAEI,WAAW,CAACJ;GACtB;AACH","names":["exports","method","name","id","groupName","urlPathPattern","bodyParamNames","bodyType","getRequestUrlParams","getRequestBody","serializeRequest","deserializeRequest","deserializeResponse","request","core","domain","chainId","common_evm_utils_1","resolve","hex","address","create","checksum","statement","uri","expirationTime","notBefore","resources","timeout","jsonResponse","decimal","toString","jsonRequest"],"sources":["../../../src/operations/evm/requestChallengeEvmOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}