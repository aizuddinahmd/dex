{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWalletNFTTransfersOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get transfers of NFTs given the wallet and other parameters. */\nexports.getWalletNFTTransfersOperation = {\n  method: 'GET',\n  name: 'getWalletNFTTransfers',\n  id: 'getWalletNFTTransfers',\n  groupName: 'nft',\n  urlPathPattern: '/{address}/nft/transfers',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'format', 'direction', 'fromBlock', 'toBlock', 'limit', 'cursor', 'disableTotal'],\n  firstPageIndex: 0,\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    format: request.format,\n    direction: request.direction,\n    from_block: (0, common_core_1.maybe)(request.fromBlock, String),\n    to_block: request.toBlock,\n    limit: (0, common_core_1.maybe)(request.limit, String),\n    cursor: request.cursor,\n    disable_total: request.disableTotal\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a;\n  return ((_a = jsonResponse.result) !== null && _a !== void 0 ? _a : []).map(function (transfer) {\n    return dataTypes_1.EvmNftTransfer.create(__assign(__assign({}, (0, common_core_1.toCamelCase)(transfer)), {\n      chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),\n      tokenAddress: dataTypes_1.EvmAddress.create(transfer.token_address, core),\n      toAddress: dataTypes_1.EvmAddress.create(transfer.to_address, core),\n      operator: transfer.operator ? dataTypes_1.EvmAddress.create(transfer.operator, core) : null,\n      fromAddress: transfer.from_address ? dataTypes_1.EvmAddress.create(transfer.from_address, core) : null,\n      value: transfer.value ? dataTypes_1.EvmNative.create(transfer.value, 'wei') : null,\n      blockTimestamp: new Date(transfer.block_timestamp)\n    }), core);\n  });\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    format: request.format,\n    direction: request.direction,\n    fromBlock: request.fromBlock,\n    toBlock: request.toBlock,\n    limit: request.limit,\n    cursor: request.cursor,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum,\n    disableTotal: request.disableTotal\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    format: jsonRequest.format,\n    direction: jsonRequest.direction,\n    fromBlock: jsonRequest.fromBlock,\n    toBlock: jsonRequest.toBlock,\n    limit: jsonRequest.limit,\n    cursor: jsonRequest.cursor,\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    disableTotal: jsonRequest.disableTotal\n  };\n}","map":{"version":3,"mappings":"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","names":["exports","method","name","id","groupName","urlPathPattern","urlPathParamNames","urlSearchParamNames","firstPageIndex","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","address","dataTypes_1","create","lowercase","format","direction","from_block","fromBlock","String","to_block","toBlock","limit","cursor","disable_total","disableTotal","jsonResponse","result","map","transfer","tokenAddress","token_address","toAddress","to_address","operator","fromAddress","from_address","value","blockTimestamp","Date","block_timestamp","checksum","jsonRequest"],"sources":["../../../src/operations/nft/getWalletNFTTransfersOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}