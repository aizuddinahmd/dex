{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EvmTransaction = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar EvmAddress_1 = require(\"../EvmAddress\");\nvar EvmChain_1 = require(\"../EvmChain\");\nvar EvmNative_1 = require(\"../EvmNative\");\nvar EvmTransactionLog_1 = require(\"../EvmTransactionLog\");\nvar EvmSignature_1 = require(\"../EvmSignature/EvmSignature\");\n/**\n * The EvmTranaction is a representation of a published transaction.\n *\n * Use this class any time you work with a transaction.\n *\n * @category DataType\n */\nvar EvmTransaction = /** @class */function () {\n  function EvmTransaction(data, core) {\n    this._data = EvmTransaction.parse(data, core);\n  }\n  /**\n   * Create a new instance of EvmTransaction from any valid transaction input\n   * @param data - the EvmTransactionish type\n   * @example\n   * ```\n   * const transaction = EvmTransaction.create(data);\n   *```\n   */\n  EvmTransaction.create = function (data, core) {\n    if (data instanceof EvmTransaction) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new EvmTransaction(data, finalCore);\n  };\n  /**\n   * Check the equality between two Evm transactions\n   * @param dataA - The first transaction\n   * @param dataB - The second transaction\n   * @example\n   * ```ts\n   * EvmTransaction.equals(dataA, dataB)\n   * ```\n   */\n  EvmTransaction.equals = function (dataA, dataB) {\n    var transactionA = EvmTransaction.create(dataA);\n    var transactionB = EvmTransaction.create(dataB);\n    if (!transactionA._data.chain.equals(transactionB._data.chain)) {\n      return false;\n    }\n    if (transactionA._data.hash !== transactionB._data.hash) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Checks the equality of the current transaction with another evm transaction\n   * @param data - the transaction to compare with\n   * @example\n   * ```ts\n   * transaction.equals(data)\n   * ```\n   */\n  EvmTransaction.prototype.equals = function (data) {\n    return EvmTransaction.equals(this, data);\n  };\n  EvmTransaction.prototype.toJSON = function () {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    var data = this._data;\n    return __assign(__assign({}, data), {\n      to: (_a = data.to) === null || _a === void 0 ? void 0 : _a.format(),\n      from: (_b = data.from) === null || _b === void 0 ? void 0 : _b.format(),\n      nonce: (_c = data.nonce) === null || _c === void 0 ? void 0 : _c.toString(),\n      gas: (_d = data.gas) === null || _d === void 0 ? void 0 : _d.toString(),\n      gasPrice: (_e = data.gasPrice) === null || _e === void 0 ? void 0 : _e.toString(),\n      gasUsed: (_f = data.gasUsed) === null || _f === void 0 ? void 0 : _f.toString(),\n      cumulativeGasUsed: (_g = data.cumulativeGasUsed) === null || _g === void 0 ? void 0 : _g.toString(),\n      value: (_h = data.value) === null || _h === void 0 ? void 0 : _h.toString(),\n      chain: (_j = data.chain) === null || _j === void 0 ? void 0 : _j.format(),\n      contractAddress: (_k = data.contractAddress) === null || _k === void 0 ? void 0 : _k.format(),\n      logs: data.logs.map(function (log) {\n        return log.toJSON();\n      }),\n      signature: (_l = data.signature) === null || _l === void 0 ? void 0 : _l.toJSON(),\n      blockNumber: (_m = data.blockNumber) === null || _m === void 0 ? void 0 : _m.toString(),\n      blockTimestamp: data.blockTimestamp.toString()\n    });\n  };\n  /**\n   * @returns a JSON represention of the transaction.\n   * @example\n   * ```\n   * transaction.format()\n   * ```\n   */\n  EvmTransaction.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(EvmTransaction.prototype, \"result\", {\n    /**\n     * @returns the transaction\n     * @example\n     * ```\n     * transaction.result\n     * ```\n     */\n    get: function () {\n      return this._data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"to\", {\n    /**\n     * @returns the transaction to address\n     * @example\n     * ```\n     * transaction.to // EvmAddress\n     * ```\n     */\n    get: function () {\n      return this._data.to;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"from\", {\n    /**\n     * @returns the transaction from address\n     * @example\n     * ```\n     * transaction.address // EvmAddress\n     * ```\n     */\n    get: function () {\n      return this._data.from;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"nonce\", {\n    /**\n     * @returns the transaction nonce\n     * @example\n     * ```\n     * transaction.nonce // 326595425\n     * ```\n     */\n    get: function () {\n      return this._data.nonce;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"gas\", {\n    /**\n     * @returns the transaction gas\n     * @example\n     * ```\n     * transaction.gas // 6721975\n     * ```\n     */\n    get: function () {\n      return this._data.gas;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"gasPrice\", {\n    /**\n     * @returns the transaction gas price\n     * @example\n     * ```\n     * transaction.gasPrice // 20000000000\n     * ```\n     */\n    get: function () {\n      return this._data.gasPrice;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"gasUsed\", {\n    /**\n     * @returns the transaction gas used\n     * @example\n     * ```\n     * transaction.gasUsed // 1340925\n     * ```\n     */\n    get: function () {\n      return this._data.gasUsed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"cumulativeGasUsed\", {\n    /**\n     * @returns the transaction cumulative gas used\n     * @example\n     * ```\n     * transaction.cumulativeGasUsed // 1340925\n     * ```\n     */\n    get: function () {\n      return this._data.cumulativeGasUsed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"blockNumber\", {\n    /**\n     * @returns the transaction block number\n     * @example\n     * ```\n     * transaction.blockNumber // 12526958\n     * ```\n     */\n    get: function () {\n      return this._data.blockNumber;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"value\", {\n    /**\n     * @returns the transaction value\n     * @example\n     * ```\n     * transaction.value // EvmNative\n     * ```\n     */\n    get: function () {\n      return this._data.value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"chain\", {\n    /**\n     * @returns the transaction chain\n     * @example\n     * ```\n     * transaction.chain // EvmChain\n     * ```\n     */\n    get: function () {\n      return this._data.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"contractAddress\", {\n    /**\n     * @returns the transaction contract address\n     * @example\n     * ```\n     * transaction.contractAddress // EvmAddress\n     * ```\n     */\n    get: function () {\n      return this._data.contractAddress;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"logs\", {\n    /**\n     * @returns the transaction logs\n     * @example\n     * ```\n     * transaction.logs // EvmTransactionLog[]\n     * ```\n     */\n    get: function () {\n      return this._data.logs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"receiptRoot\", {\n    /**\n     * @returns the transaction receipt root\n     * @example\n     * ```\n     * transaction.receiptRoot // string\n     * ```\n     */\n    get: function () {\n      return this._data.receiptRoot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"receiptStatus\", {\n    /**\n     * @returns the transaction receipt status\n     * @example\n     * ```\n     * transaction.receiptStatus // 1\n     * ```\n     */\n    get: function () {\n      return this._data.receiptStatus;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"data\", {\n    /**\n     * @returns the transaction data\n     * @example\n     * ```\n     * transaction.data // 0x000000000000000000000000000000000000000000000000000000000000002\n     * ```\n     */\n    get: function () {\n      return this._data.data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"hash\", {\n    /**\n     * @returns the transaction hash\n     * @example\n     * ```\n     * transaction.hash // 0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\n     * ```\n     */\n    get: function () {\n      return this._data.hash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"type\", {\n    /**\n     * @returns the transaction type\n     * @example\n     * ```\n     * transaction.type // 1\n     * ```\n     */\n    get: function () {\n      return this._data.type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"blockHash\", {\n    /**\n     * @returns the transaction black hash\n     * @example\n     * ```\n     * transaction.blockHash // 0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86\n     * ```\n     */\n    get: function () {\n      return this._data.blockHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"blockTimestamp\", {\n    /**\n     * @returns the transaction block timestamp\n     * @example\n     * ```\n     * transaction.blockTimestamp // Date\n     * ```\n     */\n    get: function () {\n      return this._data.blockTimestamp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"signature\", {\n    /**\n     * @returns the signature (if available)\n     * @example\n     * ```\n     * transaction.signature // EvmSignature\n     * ```\n     */\n    get: function () {\n      return this._data.signature;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"index\", {\n    /**\n     * @returns the index\n     * @example\n     * ```\n     * transaction.index // 1\n     * ```\n     */\n    get: function () {\n      return this._data.index;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"v\", {\n    get: function () {\n      var _a;\n      return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"r\", {\n    get: function () {\n      var _a;\n      return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.r;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EvmTransaction.prototype, \"s\", {\n    get: function () {\n      var _a;\n      return (_a = this._data.signature) === null || _a === void 0 ? void 0 : _a.s;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EvmTransaction.parse = function (data, core) {\n    var _a;\n    return {\n      from: EvmAddress_1.EvmAddress.create(data.from, core),\n      to: (0, common_core_1.maybe)(data.to, function (to) {\n        return EvmAddress_1.EvmAddress.create(to, core);\n      }),\n      nonce: (0, common_core_1.maybe)(data.nonce, common_core_1.BigNumber.create),\n      data: (0, common_core_1.maybe)(data.data),\n      value: (0, common_core_1.maybe)(data.value, function (val) {\n        return EvmNative_1.EvmNative.create(val, 'wei');\n      }),\n      hash: data.hash,\n      type: (0, common_core_1.maybe)(data.type, function (value) {\n        return +value;\n      }),\n      chain: EvmChain_1.EvmChain.create(data.chain),\n      gas: (0, common_core_1.maybe)(data.gas, common_core_1.BigNumber.create),\n      gasPrice: common_core_1.BigNumber.create(data.gasPrice),\n      index: +data.index,\n      blockNumber: common_core_1.BigNumber.create(data.blockNumber),\n      blockHash: data.blockHash,\n      blockTimestamp: (0, common_core_1.dateInputToDate)(data.blockTimestamp),\n      cumulativeGasUsed: common_core_1.BigNumber.create(data.cumulativeGasUsed),\n      gasUsed: common_core_1.BigNumber.create(data.gasUsed),\n      contractAddress: (0, common_core_1.maybe)(data.contractAddress, function (address) {\n        return EvmAddress_1.EvmAddress.create(address, core);\n      }),\n      receiptRoot: (0, common_core_1.maybe)(data.receiptRoot),\n      receiptStatus: (0, common_core_1.maybe)(data.receiptStatus, function (status) {\n        return +status;\n      }),\n      logs: ((_a = data.logs) !== null && _a !== void 0 ? _a : []).map(function (log) {\n        return EvmTransactionLog_1.EvmTransactionLog.create(log);\n      }),\n      signature: (0, common_core_1.maybe)(data.signature, EvmSignature_1.EvmSignature.create)\n    };\n  };\n  return EvmTransaction;\n}();\nexports.EvmTransaction = EvmTransaction;","map":{"version":3,"mappings":"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","names":["data","core","_data","EvmTransaction","parse","finalCore","common_core_1","getDefault","dataA","dataB","transactionA","create","transactionB","chain","equals","hash","to","format","from","nonce","toString","gas","gasPrice","gasUsed","cumulativeGasUsed","value","contractAddress","logs","map","log","toJSON","signature","blockNumber","blockTimestamp","Object","receiptRoot","receiptStatus","type","blockHash","index","v","r","s","EvmAddress_1","val","EvmChain_1","address","status","EvmSignature_1","exports"],"sources":["../../../src/dataTypes/EvmTransaction/EvmTransaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}