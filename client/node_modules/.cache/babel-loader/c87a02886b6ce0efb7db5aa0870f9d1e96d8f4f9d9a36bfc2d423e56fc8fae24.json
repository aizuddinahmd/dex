{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeVerify = void 0;\nvar api_utils_1 = require(\"@moralisweb3/api-utils\");\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar Auth_1 = require(\"../Auth\");\nvar common_auth_utils_1 = require(\"@moralisweb3/common-auth-utils\");\nvar AuthNetworkType_1 = require(\"../utils/AuthNetworkType\");\nvar makeEvmVerify = function (core, _a) {\n  var networkType = _a.networkType,\n    network = _a.network,\n    options = __rest(_a, [\"networkType\", \"network\"]);\n  return new api_utils_1.OperationResolver(common_auth_utils_1.verifyChallengeEvmOperation, Auth_1.BASE_URL, core).fetch({\n    message: options.message,\n    signature: options.signature\n  });\n};\nvar makeSolVerify = function (core, _a) {\n  var networkType = _a.networkType,\n    network = _a.network,\n    options = __rest(_a, [\"networkType\", \"network\"]);\n  return new api_utils_1.OperationResolver(common_auth_utils_1.verifyChallengeSolanaOperation, Auth_1.BASE_URL, core).fetch({\n    message: options.message,\n    signature: options.signature\n  });\n};\nvar makeAptosVerify = function (core, _a) {\n  var networkType = _a.networkType,\n    options = __rest(_a, [\"networkType\"]);\n  return new api_utils_1.OperationResolver(common_auth_utils_1.verifyChallengeAptosOperation, Auth_1.BASE_URL, core).fetch({\n    message: options.message,\n    signature: options.signature\n  });\n};\nvar makeVerify = function (core) {\n  return function (options) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // Backwards compatibility for the 'network' parameter\n        if (!options.networkType && options.network) {\n          options.networkType = options.network;\n        }\n        switch (options.networkType) {\n          case AuthNetworkType_1.AuthNetworkType.EVM:\n            return [2 /*return*/, makeEvmVerify(core, options)];\n          case AuthNetworkType_1.AuthNetworkType.SOLANA:\n            return [2 /*return*/, makeSolVerify(core, options)];\n          case AuthNetworkType_1.AuthNetworkType.APTOS:\n            return [2 /*return*/, makeAptosVerify(core, options)];\n          default:\n            if (!options.networkType) {\n              return [2 /*return*/, makeEvmVerify(core, options)];\n            }\n            throw new common_core_1.MoralisAuthError({\n              code: common_core_1.AuthErrorCode.INCORRECT_NETWORK,\n              message: \"Incorrect network provided. Got \\\"\".concat(options.networkType, \"\\\", Valid values are: \").concat(Object.values(AuthNetworkType_1.AuthNetworkType).map(function (value) {\n                return \"\\\"\".concat(value, \"\\\"\");\n              }).join(', '))\n            });\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n};\n\nexports.makeVerify = makeVerify;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAKA;AA8BA,IAAMA,aAAa,GAAG,UAACC,IAAU,EAAEC,EAAsD;EAApD,eAAW;IAAEC,OAAO;IAAKC,OAAO,cAAlC,0BAAoC,CAAF;EACnE,OAAO,IAAIC,6BAAiB,CAACC,+CAA2B,EAAEC,eAAQ,EAAEN,IAAI,CAAC,CAACO,KAAK,CAAC;IAC9EC,OAAO,EAAEL,OAAO,CAACK,OAAO;IACxBC,SAAS,EAAEN,OAAO,CAACM;GACpB,CAAC;AACJ,CAAC;AAED,IAAMC,aAAa,GAAG,UAACV,IAAU,EAAEC,EAAsD;EAApD,eAAW;IAAEC,OAAO;IAAKC,OAAO,cAAlC,0BAAoC,CAAF;EACnE,OAAO,IAAIC,6BAAiB,CAACC,kDAA8B,EAAEC,eAAQ,EAAEN,IAAI,CAAC,CAACO,KAAK,CAAC;IACjFC,OAAO,EAAEL,OAAO,CAACK,OAAO;IACxBC,SAAS,EAAEN,OAAO,CAACM;GACpB,CAAC;AACJ,CAAC;AAED,IAAME,eAAe,GAAG,UAACX,IAAU,EAAEC,EAA+C;EAA7C,eAAW;IAAKE,OAAO,cAAzB,eAA2B,CAAF;EAC5D,OAAO,IAAIC,6BAAiB,CAACC,iDAA6B,EAAEC,eAAQ,EAAEN,IAAI,CAAC,CAACO,KAAK,CAAC;IAChFC,OAAO,EAAEL,OAAO,CAACK,OAAO;IACxBC,SAAS,EAAEN,OAAO,CAACM;GACpB,CAAC;AACJ,CAAC;AAEM,IAAMG,UAAU,GAAG,UAACZ,IAAU;EAAK,iBAAOG,OAAsB;IAAA;;QACrE;QACA,IAAI,CAACA,OAAO,CAACU,WAAW,IAAIV,OAAO,CAACD,OAAO,EAAE;UAC3CC,OAAO,CAACU,WAAW,GAAGV,OAAO,CAACD,OAAO;;QAGvC,QAAQC,OAAO,CAACU,WAAW;UACzB,KAAKC,iCAAe,CAACC,GAAG;YACtB,sBAAOhB,aAAa,CAACC,IAAI,EAAEG,OAAO,CAAC;UACrC,KAAKW,iCAAe,CAACE,MAAM;YACzB,sBAAON,aAAa,CAACV,IAAI,EAAEG,OAAO,CAAC;UACrC,KAAKW,iCAAe,CAACG,KAAK;YACxB,sBAAON,eAAe,CAACX,IAAI,EAAEG,OAAO,CAAC;UACvC;YACE,IAAI,CAACA,OAAO,CAACU,WAAW,EAAE;cACxB,sBAAOd,aAAa,CAACC,IAAI,EAAEG,OAAO,CAAC;;YAGrC,MAAM,IAAIe,8BAAgB,CAAC;cACzBC,IAAI,EAAED,2BAAa,CAACE,iBAAiB;cACrCZ,OAAO,EAAE,4CAAoCL,OAAO,CAACU,WAAW,mCAAwBQ,MAAM,CAACC,MAAM,CACnGR,iCAAe,CAChB,CACES,GAAG,CAAC,UAACC,KAAK;gBAAK,mBAAIA,KAAK,OAAG;cAAZ,CAAY,CAAC,CAC5BC,IAAI,CAAC,IAAI,CAAC;aACd,CAAC;QAAC;;;;GAER;AA3ByC,CA2BzC;;AA3BYC,kBAAU","names":["makeEvmVerify","core","_a","network","options","api_utils_1","common_auth_utils_1","Auth_1","fetch","message","signature","makeSolVerify","makeAptosVerify","makeVerify","networkType","AuthNetworkType_1","EVM","SOLANA","APTOS","common_core_1","code","INCORRECT_NETWORK","Object","values","map","value","join","exports"],"sources":["../../src/methods/verify.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}