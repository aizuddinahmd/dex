{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTransactionOperation = void 0;\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get the contents of a transaction by the given transaction hash. */\nexports.getTransactionOperation = {\n  method: 'GET',\n  name: 'getTransaction',\n  id: 'getTransaction',\n  groupName: 'transaction',\n  isNullable: true,\n  urlPathPattern: '/transaction/{transactionHash}',\n  urlPathParamNames: ['transactionHash'],\n  urlSearchParamNames: ['chain'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    transactionHash: request.transactionHash\n  };\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    transactionHash: request.transactionHash\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    transactionHash: jsonRequest.transactionHash\n  };\n}\n//TODO: I noticed that the docs comes with a type of \"string | unknown\" which automatically resolves to \"unknown\". I think we should fix this in the api, casting for now\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a;\n  return dataTypes_1.EvmTransaction.create({\n    from: jsonResponse.from_address,\n    to: jsonResponse.to_address,\n    value: jsonResponse.value,\n    gasPrice: jsonResponse.gas_price,\n    gasUsed: jsonResponse.receipt_gas_used,\n    data: jsonResponse.input,\n    nonce: jsonResponse.nonce,\n    blockHash: jsonResponse.block_hash,\n    blockNumber: jsonResponse.block_number,\n    blockTimestamp: jsonResponse.block_timestamp,\n    index: jsonResponse.transaction_index,\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),\n    hash: jsonResponse.hash,\n    gas: jsonResponse.gas,\n    cumulativeGasUsed: jsonResponse.receipt_cumulative_gas_used,\n    contractAddress: jsonResponse.receipt_contract_address,\n    logs: ((_a = jsonResponse.logs) !== null && _a !== void 0 ? _a : []).map(function (log) {\n      return dataTypes_1.EvmTransactionLog.create({\n        address: log.address,\n        blockHash: log.block_hash,\n        blockNumber: +log.block_number,\n        data: log.data,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        topics: [log.topic0, log.topic1, log.topic2, log.topic3],\n        transactionHash: log.transaction_hash,\n        blockTimestamp: log.block_timestamp,\n        logIndex: +log.log_index,\n        transactionIndex: +log.transaction_index,\n        chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core)\n      }, core);\n    }),\n    receiptRoot: jsonResponse.receipt_root,\n    receiptStatus: jsonResponse.receipt_status\n  }, core);\n}","map":{"version":3,"mappings":"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","names":["exports","method","name","id","groupName","isNullable","urlPathPattern","urlPathParamNames","urlSearchParamNames","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","transactionHash","jsonRequest","dataTypes_1","create","jsonResponse","from","from_address","to","to_address","value","gasPrice","gas_price","gasUsed","receipt_gas_used","data","input","nonce","blockHash","block_hash","blockNumber","block_number","blockTimestamp","block_timestamp","index","transaction_index","hash","gas","cumulativeGasUsed","receipt_cumulative_gas_used","contractAddress","receipt_contract_address","logs","map","log","address","topics","topic0","topic1","topic2","topic3","transaction_hash","logIndex","log_index","transactionIndex","receiptRoot","receipt_root","receiptStatus","receipt_status"],"sources":["../../../src/operations/transaction/getTransactionOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}