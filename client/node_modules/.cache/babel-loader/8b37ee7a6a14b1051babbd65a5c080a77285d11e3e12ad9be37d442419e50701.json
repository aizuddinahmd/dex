{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNFTOwnersOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/**\n * Get owners of NFTs for a given contract.\n * * Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection.\n */\nexports.getNFTOwnersOperation = {\n  method: 'GET',\n  name: 'getNFTOwners',\n  id: 'getNFTOwners',\n  groupName: 'nft',\n  urlPathPattern: '/nft/{address}/owners',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'format', 'limit', 'cursor', 'normalizeMetadata', 'disableTotal'],\n  firstPageIndex: 1,\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    format: request.format,\n    limit: (0, common_core_1.maybe)(request.limit, String),\n    cursor: request.cursor,\n    normalizeMetadata: request.normalizeMetadata,\n    disable_total: request.disableTotal\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a;\n  return ((_a = jsonResponse.result) !== null && _a !== void 0 ? _a : []).map(function (nft) {\n    return dataTypes_1.EvmNft.create(__assign(__assign({}, (0, common_core_1.toCamelCase)(nft)), {\n      chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),\n      ownerOf: dataTypes_1.EvmAddress.create(nft.owner_of, core),\n      lastMetadataSync: new Date(nft.last_metadata_sync),\n      lastTokenUriSync: new Date(nft.last_token_uri_sync)\n    }), core);\n  });\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    format: request.format,\n    limit: request.limit,\n    cursor: request.cursor,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum,\n    normalizeMetadata: request.normalizeMetadata,\n    disableTotal: request.disableTotal\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    format: jsonRequest.format,\n    limit: jsonRequest.limit,\n    cursor: jsonRequest.cursor,\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    normalizeMetadata: jsonRequest.normalizeMetadata,\n    disableTotal: jsonRequest.disableTotal\n  };\n}","map":{"version":3,"mappings":"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","names":["exports","method","name","id","groupName","urlPathPattern","urlPathParamNames","urlSearchParamNames","firstPageIndex","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","address","dataTypes_1","create","lowercase","format","limit","String","cursor","normalizeMetadata","disable_total","disableTotal","jsonResponse","result","map","nft","ownerOf","owner_of","lastMetadataSync","Date","last_metadata_sync","lastTokenUriSync","last_token_uri_sync","checksum","jsonRequest"],"sources":["../../../src/operations/nft/getNFTOwnersOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}