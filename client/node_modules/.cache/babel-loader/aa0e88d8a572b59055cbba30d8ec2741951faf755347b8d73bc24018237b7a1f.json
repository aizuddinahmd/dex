{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperationRequestValidator = void 0;\nvar Error_1 = require(\"../Error\");\nvar OperationRequestValidator = /** @class */function () {\n  function OperationRequestValidator(operation) {\n    this.allParamNames = __spreadArray(__spreadArray(__spreadArray([], operation.urlPathParamNames || [], true), operation.urlSearchParamNames || [], true), operation.bodyParamNames || [], true);\n  }\n  OperationRequestValidator.prototype.validate = function (request) {\n    var requestParamNames = Object.keys(request);\n    for (var _i = 0, requestParamNames_1 = requestParamNames; _i < requestParamNames_1.length; _i++) {\n      var paramName = requestParamNames_1[_i];\n      if (!this.allParamNames.includes(paramName)) {\n        var allParamsNames = this.allParamNames.join(', ');\n        throw new Error_1.MoralisError({\n          code: Error_1.CoreErrorCode.INVALID_ARGUMENT,\n          message: \"Request contains unknown parameter: \".concat(paramName, \". This operation supports the following parameters: \").concat(allParamsNames)\n        });\n      }\n    }\n  };\n  return OperationRequestValidator;\n}();\nexports.OperationRequestValidator = OperationRequestValidator;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA;AAGA;EAGE,mCAAmBA,SAAwD;IACzE,IAAI,CAACC,aAAa,iDACZD,SAAS,CAACE,iBAAiB,IAAI,EAAE,EAAC,OAClCF,SAAS,CAACG,mBAAmB,IAAI,EAAE,EAAC,OACpCH,SAAS,CAACI,cAAc,IAAI,EAAE,EAAC,KACpC;EACH;EAEOC,4CAAQ,GAAf,UAAgBC,OAAgB;IAC9B,IAAMC,iBAAiB,GAAGC,MAAM,CAACC,IAAI,CAACH,OAAkC,CAAC;IAEzE,KAAwB,UAAiB,EAAjBI,uCAAiB,EAAjBC,+BAAiB,EAAjBA,IAAiB,EAAE;MAAtC,IAAMC,SAAS;MAClB,IAAI,CAAC,IAAI,CAACX,aAAa,CAACY,QAAQ,CAACD,SAA0B,CAAC,EAAE;QAC5D,IAAME,cAAc,GAAG,IAAI,CAACb,aAAa,CAACc,IAAI,CAAC,IAAI,CAAC;QACpD,MAAM,IAAIC,oBAAY,CAAC;UACrBC,IAAI,EAAED,qBAAa,CAACE,gBAAgB;UACpCC,OAAO,EAAE,8CAAuCP,SAAS,iEAAuDE,cAAc;SAC/H,CAAC;;;EAGR,CAAC;EACH,gCAAC;AAAD,CAAC,EAxBD;AAAaM","names":["operation","allParamNames","urlPathParamNames","urlSearchParamNames","bodyParamNames","OperationRequestValidator","request","requestParamNames","Object","keys","requestParamNames_1","_i","paramName","includes","allParamsNames","join","Error_1","code","INVALID_ARGUMENT","message","exports"],"sources":["../../src/operations/OperationRequestValidator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}