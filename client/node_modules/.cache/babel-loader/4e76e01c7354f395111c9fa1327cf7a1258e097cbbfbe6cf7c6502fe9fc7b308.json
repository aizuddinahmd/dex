{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNFTTransfersByBlockOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get transfers of NFTs given a block number or block hash. */\nexports.getNFTTransfersByBlockOperation = {\n  method: 'GET',\n  name: 'getNFTTransfersByBlock',\n  id: 'getNFTTransfersByBlock',\n  groupName: 'nft',\n  urlPathPattern: '/block/{blockNumberOrHash}/nft/transfers',\n  urlPathParamNames: ['blockNumberOrHash'],\n  urlSearchParamNames: ['chain', 'limit', 'cursor', 'disableTotal'],\n  firstPageIndex: 0,\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    limit: (0, common_core_1.maybe)(request.limit, String),\n    cursor: request.cursor,\n    blockNumberOrHash: request.blockNumberOrHash,\n    disable_total: request.disableTotal\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a;\n  return ((_a = jsonResponse.result) !== null && _a !== void 0 ? _a : []).map(function (transfer) {\n    return dataTypes_1.EvmNftTransfer.create(__assign(__assign({}, (0, common_core_1.toCamelCase)(transfer)), {\n      chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),\n      tokenAddress: dataTypes_1.EvmAddress.create(transfer.token_address, core),\n      toAddress: dataTypes_1.EvmAddress.create(transfer.to_address, core),\n      operator: transfer.operator ? dataTypes_1.EvmAddress.create(transfer.operator, core) : null,\n      fromAddress: transfer.from_address ? dataTypes_1.EvmAddress.create(transfer.from_address, core) : null,\n      value: transfer.value ? dataTypes_1.EvmNative.create(transfer.value, 'wei') : null,\n      blockTimestamp: new Date(transfer.block_timestamp)\n    }), core);\n  });\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    limit: request.limit,\n    cursor: request.cursor,\n    blockNumberOrHash: request.blockNumberOrHash,\n    disableTotal: request.disableTotal\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    limit: jsonRequest.limit,\n    cursor: jsonRequest.cursor,\n    blockNumberOrHash: jsonRequest.blockNumberOrHash,\n    disableTotal: jsonRequest.disableTotal\n  };\n}","map":{"version":3,"mappings":"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","names":["exports","method","name","id","groupName","urlPathPattern","urlPathParamNames","urlSearchParamNames","firstPageIndex","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","limit","String","cursor","blockNumberOrHash","disable_total","disableTotal","jsonResponse","result","map","transfer","create","tokenAddress","dataTypes_1","token_address","toAddress","to_address","operator","fromAddress","from_address","value","blockTimestamp","Date","block_timestamp","jsonRequest"],"sources":["../../../src/operations/nft/getNFTTransfersByBlockOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}