{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Config = void 0;\nvar Error_1 = require(\"../Error\");\nvar Config = /** @class */function () {\n  function Config() {\n    this.items = new Map();\n  }\n  Config.prototype.registerKey = function (key, validator) {\n    if (this.items.has(key.name)) {\n      throw new Error_1.CoreError({\n        code: Error_1.CoreErrorCode.CONFIG_KEY_ALREADY_EXIST,\n        message: \"Key \\\"\".concat(key.name, \"\\\" is already registered\")\n      });\n    }\n    this.items.set(key.name, {\n      key: key,\n      value: key.defaultValue,\n      validator: validator\n    });\n  };\n  Config.prototype.getKeys = function () {\n    return Array.from(this.items.keys());\n  };\n  Config.prototype.hasKey = function (key) {\n    return this.items.has(key.name);\n  };\n  Config.prototype.get = function (keyOrName) {\n    return this.getItem(keyOrName).value;\n  };\n  Config.prototype.set = function (keyOrName, value) {\n    var item = this.getItem(keyOrName);\n    var error = item.validator ? item.validator(value) : null;\n    if (error) {\n      throw new Error_1.CoreError({\n        code: Error_1.CoreErrorCode.CONFIG_INVALID_VALUE,\n        message: \"Cannot set this config. Invalid value for \\\"\".concat(item.key.name, \"\\\". \").concat(error)\n      });\n    }\n    item.value = value;\n  };\n  Config.prototype.merge = function (values) {\n    var _this = this;\n    Object.keys(values).forEach(function (keyName) {\n      _this.set(keyName, values[keyName]);\n    });\n  };\n  Config.prototype.reset = function () {\n    this.items.forEach(function (item) {\n      item.value = item.key.defaultValue;\n    });\n  };\n  Config.prototype.getItem = function (keyOrName) {\n    var keyName = typeof keyOrName === 'string' ? keyOrName : keyOrName.name;\n    var item = this.items.get(keyName);\n    if (!item) {\n      // This error occurs when a user tries to set a value for a specific key, but the key is not registered.\n      // That situation may occur, when a moralis module is not registered (all keys are registered in the module setup step).\n      // If you have this error, you should fix your code. Firstly, you should register all modules, later you can modify the configuration.\n      throw new Error_1.CoreError({\n        code: Error_1.CoreErrorCode.CONFIG_KEY_NOT_EXIST,\n        message: \"Key \\\"\".concat(keyName, \"\\\" is unregistered. Have you registered all required modules?\")\n      });\n    }\n    return item;\n  };\n  return Config;\n}();\nexports.Config = Config;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;EAAA;IACmB,UAAK,GAAG,IAAIA,GAAG,EAA+B;EA8DjE;EA5DSC,4BAAW,GAAlB,UAA0BC,GAAqB,EAAEC,SAAqC;IACpF,IAAI,IAAI,CAACC,KAAK,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC,EAAE;MAC5B,MAAM,IAAIC,iBAAS,CAAC;QAClBC,IAAI,EAAED,qBAAa,CAACE,wBAAwB;QAC5CC,OAAO,EAAE,gBAAQR,GAAG,CAACI,IAAI;OAC1B,CAAC;;IAEJ,IAAI,CAACF,KAAK,CAACO,GAAG,CAACT,GAAG,CAACI,IAAI,EAAE;MAAEJ,GAAG;MAAEU,KAAK,EAAEV,GAAG,CAACW,YAAY;MAAEV,SAAS,EAAEA;IAAwC,CAAE,CAAC;EACjH,CAAC;EAEMF,wBAAO,GAAd;IACE,OAAOa,KAAK,CAACC,IAAI,CAAC,IAAI,CAACX,KAAK,CAACY,IAAI,EAAE,CAAC;EACtC,CAAC;EAEMf,uBAAM,GAAb,UAAqBC,GAAqB;IACxC,OAAO,IAAI,CAACE,KAAK,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;EACjC,CAAC;EAEML,oBAAG,GAAV,UAAkBgB,SAAoC;IACpD,OAAO,IAAI,CAACC,OAAO,CAACD,SAAS,CAAC,CAACL,KAAK;EACtC,CAAC;EAEMX,oBAAG,GAAV,UAAkBgB,SAAoC,EAAEL,KAAY;IAClE,IAAMO,IAAI,GAAG,IAAI,CAACD,OAAO,CAAQD,SAAS,CAAC;IAC3C,IAAMG,KAAK,GAAGD,IAAI,CAAChB,SAAS,GAAGgB,IAAI,CAAChB,SAAS,CAACS,KAAK,CAAC,GAAG,IAAI;IAC3D,IAAIQ,KAAK,EAAE;MACT,MAAM,IAAIb,iBAAS,CAAC;QAClBC,IAAI,EAAED,qBAAa,CAACc,oBAAoB;QACxCX,OAAO,EAAE,sDAA8CS,IAAI,CAACjB,GAAG,CAACI,IAAI,iBAAMc,KAAK;OAChF,CAAC;;IAEJD,IAAI,CAACP,KAAK,GAAGA,KAAK;EACpB,CAAC;EAEMX,sBAAK,GAAZ,UAAaqB,MAAoB;IAAjC;IACEC,MAAM,CAACP,IAAI,CAACM,MAAM,CAAC,CAACE,OAAO,CAAC,UAACC,OAAO;MAClCC,KAAI,CAACf,GAAG,CAACc,OAAO,EAAEH,MAAM,CAACG,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;EAEMxB,sBAAK,GAAZ;IACE,IAAI,CAACG,KAAK,CAACoB,OAAO,CAAC,UAACL,IAAI;MACtBA,IAAI,CAACP,KAAK,GAAGO,IAAI,CAACjB,GAAG,CAACW,YAAY;IACpC,CAAC,CAAC;EACJ,CAAC;EAEOZ,wBAAO,GAAf,UAAuBgB,SAAoC;IACzD,IAAMQ,OAAO,GAAG,OAAOR,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAGA,SAAS,CAACX,IAAI;IAC1E,IAAMa,IAAI,GAAG,IAAI,CAACf,KAAK,CAACuB,GAAG,CAACF,OAAO,CAAC;IACpC,IAAI,CAACN,IAAI,EAAE;MACT;MACA;MACA;MACA,MAAM,IAAIZ,iBAAS,CAAC;QAClBC,IAAI,EAAED,qBAAa,CAACqB,oBAAoB;QACxClB,OAAO,EAAE,gBAAQe,OAAO;OACzB,CAAC;;IAEJ,OAAON,IAAyB;EAClC,CAAC;EACH,aAAC;AAAD,CAAC,EA/DD;AAAaU","names":["Map","Config","key","validator","items","has","name","Error_1","code","CONFIG_KEY_ALREADY_EXIST","message","set","value","defaultValue","Array","from","keys","keyOrName","getItem","item","error","CONFIG_INVALID_VALUE","values","Object","forEach","keyName","_this","get","CONFIG_KEY_NOT_EXIST","exports"],"sources":["../../src/Config/Config.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}