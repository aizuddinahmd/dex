{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTokenTransfersOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get ERC20 token transactions from a contract ordered by block number in descending order. */\nexports.getTokenTransfersOperation = {\n  method: 'GET',\n  name: 'getTokenTransfers',\n  id: 'getTokenTransfers',\n  groupName: 'token',\n  urlPathPattern: '/erc20/{address}/transfers',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'fromBlock', 'toBlock', 'fromDate', 'toDate', 'limit', 'cursor', 'disableTotal'],\n  firstPageIndex: 0,\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    from_block: (0, common_core_1.maybe)(request.fromBlock, String),\n    to_block: (0, common_core_1.maybe)(request.toBlock, String),\n    from_date: request.fromDate ? new Date(request.fromDate).toISOString() : undefined,\n    to_date: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n    limit: (0, common_core_1.maybe)(request.limit, String),\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    cursor: request.cursor,\n    disable_total: request.disableTotal\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a;\n  return ((_a = jsonResponse.result) !== null && _a !== void 0 ? _a : []).map(function (transfer) {\n    return dataTypes_1.Erc20Transfer.create(__assign(__assign({}, (0, common_core_1.toCamelCase)(transfer)), {\n      chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),\n      address: dataTypes_1.EvmAddress.create(transfer.address, core),\n      toAddress: dataTypes_1.EvmAddress.create(transfer.to_address, core),\n      fromAddress: dataTypes_1.EvmAddress.create(transfer.from_address, core),\n      value: common_core_1.BigNumber.create(transfer.value),\n      blockTimestamp: new Date(transfer.block_timestamp)\n    }));\n  });\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    fromBlock: request.fromBlock,\n    toBlock: request.toBlock,\n    fromDate: request.fromDate,\n    toDate: request.toDate,\n    limit: request.limit,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum,\n    cursor: request.cursor,\n    disableTotal: request.disableTotal\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    fromBlock: jsonRequest.fromBlock,\n    toBlock: jsonRequest.toBlock,\n    fromDate: jsonRequest.fromDate,\n    toDate: jsonRequest.toDate,\n    limit: jsonRequest.limit,\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    cursor: jsonRequest.cursor,\n    disableTotal: jsonRequest.disableTotal\n  };\n}","map":{"version":3,"mappings":"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","names":["exports","method","name","id","groupName","urlPathPattern","urlPathParamNames","urlSearchParamNames","firstPageIndex","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","from_block","fromBlock","String","to_block","toBlock","from_date","fromDate","Date","toISOString","undefined","to_date","toDate","limit","address","dataTypes_1","create","lowercase","cursor","disable_total","disableTotal","jsonResponse","result","map","transfer","toAddress","to_address","fromAddress","from_address","value","common_core_1","blockTimestamp","block_timestamp","checksum","jsonRequest"],"sources":["../../../src/operations/token/getTokenTransfersOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}