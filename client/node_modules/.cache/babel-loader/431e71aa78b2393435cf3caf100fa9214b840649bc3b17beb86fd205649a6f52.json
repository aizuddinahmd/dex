{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNFTMetadataOperation = void 0;\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar SolNetworkResolver_1 = require(\"../../SolNetworkResolver\");\n/** Gets the contract level metadata (mint, standard, name, symbol, metaplex) for the given network and contract */\nexports.getNFTMetadataOperation = {\n  method: 'GET',\n  name: 'getNFTMetadata',\n  id: 'getNFTMetadata',\n  groupName: 'nft',\n  urlPathParamNames: ['network', 'address'],\n  urlPathPattern: '/nft/{network}/{address}/metadata',\n  getRequestUrlParams: getRequestUrlParams,\n  deserializeResponse: deserializeResponse,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    network: SolNetworkResolver_1.SolNetworkResolver.resolve(request.network, core),\n    address: dataTypes_1.SolAddress.create(request.address).address\n  };\n}\nfunction deserializeResponse(jsonResponse) {\n  return {\n    mint: dataTypes_1.SolAddress.create(jsonResponse.mint),\n    standard: jsonResponse.standard,\n    name: jsonResponse.name,\n    symbol: jsonResponse.symbol,\n    metaplex: {\n      metadataUri: jsonResponse.metaplex.metadataUri,\n      updateAuthority: dataTypes_1.SolAddress.create(jsonResponse.metaplex.updateAuthority),\n      sellerFeeBasisPoints: jsonResponse.metaplex.sellerFeeBasisPoints,\n      primarySaleHappened: jsonResponse.metaplex.primarySaleHappened,\n      isMutable: jsonResponse.metaplex.isMutable,\n      masterEdition: jsonResponse.metaplex.masterEdition\n    }\n  };\n}\nfunction serializeRequest(request, core) {\n  return {\n    address: dataTypes_1.SolAddress.create(request.address).address,\n    network: SolNetworkResolver_1.SolNetworkResolver.resolve(request.network, core)\n  };\n}\nfunction deserializeRequest(jsonRequest) {\n  return {\n    network: dataTypes_1.SolNetwork.create(jsonRequest.network),\n    address: dataTypes_1.SolAddress.create(jsonRequest.address)\n  };\n}","map":{"version":3,"mappings":";;;;;;AACA;AACA;AAuBA;AACaA,+BAAuB,GAKhC;EACFC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,gBAAgB;EACtBC,EAAE,EAAE,gBAAgB;EACpBC,SAAS,EAAE,KAAK;EAChBC,iBAAiB,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EACzCC,cAAc,EAAE,mCAAmC;EAEnDC,mBAAmB;EACnBC,mBAAmB;EACnBC,gBAAgB;EAChBC,kBAAkB;CACnB;AAED;AAEA,SAASH,mBAAmB,CAACI,OAA8B,EAAEC,IAAU;EACrE,OAAO;IACLC,OAAO,EAAEC,uCAAkB,CAACC,OAAO,CAACJ,OAAO,CAACE,OAAO,EAAED,IAAI,CAAC;IAC1DI,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACP,OAAO,CAACK,OAAO,CAAC,CAACA;GAC7C;AACH;AAEA,SAASR,mBAAmB,CAACW,YAAwC;EACnE,OAAO;IACLC,IAAI,EAAEH,sBAAU,CAACC,MAAM,CAACC,YAAY,CAACC,IAAI,CAAC;IAC1CC,QAAQ,EAAEF,YAAY,CAACE,QAAQ;IAC/BnB,IAAI,EAAEiB,YAAY,CAACjB,IAAI;IACvBoB,MAAM,EAAEH,YAAY,CAACG,MAAM;IAC3BC,QAAQ,EAAE;MACRC,WAAW,EAAEL,YAAY,CAACI,QAAQ,CAACC,WAAW;MAC9CC,eAAe,EAAER,sBAAU,CAACC,MAAM,CAACC,YAAY,CAACI,QAAQ,CAACE,eAAe,CAAC;MACzEC,oBAAoB,EAAEP,YAAY,CAACI,QAAQ,CAACG,oBAAoB;MAChEC,mBAAmB,EAAER,YAAY,CAACI,QAAQ,CAACI,mBAAmB;MAC9DC,SAAS,EAAET,YAAY,CAACI,QAAQ,CAACK,SAAS;MAC1CC,aAAa,EAAEV,YAAY,CAACI,QAAQ,CAACM;;GAExC;AACH;AAEA,SAASpB,gBAAgB,CAACE,OAA8B,EAAEC,IAAU;EAClE,OAAO;IACLI,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACP,OAAO,CAACK,OAAO,CAAC,CAACA,OAAO;IACnDH,OAAO,EAAEC,uCAAkB,CAACC,OAAO,CAACJ,OAAO,CAACE,OAAO,EAAED,IAAI;GAC1D;AACH;AAEA,SAASF,kBAAkB,CAACoB,WAAsC;EAChE,OAAO;IACLjB,OAAO,EAAEI,sBAAU,CAACC,MAAM,CAACY,WAAW,CAACjB,OAAO,CAAC;IAC/CG,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACY,WAAW,CAACd,OAAO;GAC/C;AACH","names":["exports","method","name","id","groupName","urlPathParamNames","urlPathPattern","getRequestUrlParams","deserializeResponse","serializeRequest","deserializeRequest","request","core","network","SolNetworkResolver_1","resolve","address","dataTypes_1","create","jsonResponse","mint","standard","symbol","metaplex","metadataUri","updateAuthority","sellerFeeBasisPoints","primarySaleHappened","isMutable","masterEdition","jsonRequest"],"sources":["../../../src/operations/nft/getNFTMetadataOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}