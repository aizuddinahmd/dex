{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNFTTradesOperation = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Get trades of NFTs for a given contract and marketplace. */\nexports.getNFTTradesOperation = {\n  method: 'GET',\n  name: 'getNFTTrades',\n  id: 'getNFTTrades',\n  groupName: 'nft',\n  urlPathPattern: '/nft/{address}/trades',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain', 'fromBlock', 'toBlock', 'fromDate', 'toDate', 'marketplace', 'cursor', 'limit', 'disableTotal'],\n  firstPageIndex: 0,\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase,\n    from_block: (0, common_core_1.maybe)(request.fromBlock, String),\n    to_block: (0, common_core_1.maybe)(request.toBlock, String),\n    from_date: request.fromDate ? new Date(request.fromDate).toISOString() : undefined,\n    to_date: request.toDate ? new Date(request.toDate).toISOString() : undefined,\n    marketplace: request.marketplace,\n    cursor: request.cursor,\n    limit: (0, common_core_1.maybe)(request.limit, String),\n    disable_total: request.disableTotal\n  };\n}\nfunction deserializeResponse(jsonResponse, request, core) {\n  var _a;\n  return ((_a = jsonResponse.result) !== null && _a !== void 0 ? _a : []).map(function (trade) {\n    return dataTypes_1.EvmNftTrade.create(__assign(__assign({}, (0, common_core_1.toCamelCase)(trade)), {\n      chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core),\n      sellerAddress: dataTypes_1.EvmAddress.create(trade.seller_address, core),\n      buyerAddress: dataTypes_1.EvmAddress.create(trade.buyer_address, core),\n      marketplaceAddress: dataTypes_1.EvmAddress.create(trade.marketplace_address, core),\n      tokenAddress: dataTypes_1.EvmAddress.create(trade.token_address, core),\n      price: dataTypes_1.EvmNative.create(trade.price, 'wei'),\n      blockTimestamp: new Date(trade.block_timestamp),\n      tokenIds: trade.token_ids\n    }));\n  });\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    fromBlock: request.fromBlock,\n    toBlock: request.toBlock,\n    fromDate: request.fromDate,\n    toDate: request.toDate,\n    marketplace: request.marketplace,\n    cursor: request.cursor,\n    limit: request.limit,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum,\n    disableTotal: request.disableTotal\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    fromBlock: jsonRequest.fromBlock,\n    toBlock: jsonRequest.toBlock,\n    fromDate: jsonRequest.fromDate,\n    toDate: jsonRequest.toDate,\n    marketplace: jsonRequest.marketplace,\n    cursor: jsonRequest.cursor,\n    limit: jsonRequest.limit,\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core),\n    disableTotal: jsonRequest.disableTotal\n  };\n}","map":{"version":3,"mappings":"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","names":["exports","method","name","id","groupName","urlPathPattern","urlPathParamNames","urlSearchParamNames","firstPageIndex","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","address","dataTypes_1","create","lowercase","from_block","fromBlock","String","to_block","toBlock","from_date","fromDate","Date","toISOString","undefined","to_date","toDate","marketplace","cursor","limit","disable_total","disableTotal","jsonResponse","result","map","trade","sellerAddress","seller_address","buyerAddress","buyer_address","marketplaceAddress","marketplace_address","tokenAddress","token_address","price","blockTimestamp","block_timestamp","tokenIds","token_ids","checksum","jsonRequest"],"sources":["../../../src/operations/nft/getNFTTradesOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}