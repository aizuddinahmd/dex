{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AptosNative = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar unitToDecimals = {\n  aptos: 8,\n  octas: 0\n};\n/**\n * The AptosNative class is a MoralisData that references to the value of Aptos native currency APT\n *\n * @category DataType\n */\nvar AptosNative = /** @class */function () {\n  function AptosNative(rawValue) {\n    this.rawValue = rawValue;\n  }\n  /**\n   * Create a new instance of AptosNative from any valid {@link AptosNativeish} value.\n   * @param value - the value to create the AptosNative from\n   * @param unit - the unit of the value (optional), defaults to `aptos`\n   * @returns a new instance of AptosNative\n   * @example\n   * ```ts\n   * const native = AptosNative.create(2, 'octas');\n   * const native = AptosNative.create(2);\n   *```\n   */\n  AptosNative.create = function (value, unit) {\n    if (value instanceof AptosNative) {\n      return value;\n    }\n    return new AptosNative(AptosNative.parse(value, unit));\n  };\n  AptosNative.parse = function (value, unit) {\n    if (unit === void 0) {\n      unit = 'aptos';\n    }\n    var decimal;\n    if (typeof unit === 'number') {\n      decimal = unit;\n    } else if (unitToDecimals[unit] !== undefined) {\n      decimal = unitToDecimals[unit];\n    } else {\n      throw new common_core_1.CoreError({\n        code: common_core_1.CoreErrorCode.INVALID_ARGUMENT,\n        message: \"Not supported Aptos unit: \".concat(unit)\n      });\n    }\n    return common_core_1.BigNumber.fromDecimal(value.toString(), decimal);\n  };\n  /**\n   * Compares two AptosNativeish values.\n   * @param valueA - the first value to compare\n   * @param valueB - the second value to compare\n   * @returns true if the values are equal\n   * @example\n   * ```ts\n   * AptosNative.equals(AptosNative.create(1), AptosNative.create(1)); // true\n   * ```\n   */\n  AptosNative.equals = function (valueA, valueB) {\n    var aptosNativeA = AptosNative.create(valueA);\n    var aptosNativeB = AptosNative.create(valueB);\n    return aptosNativeA.octas === aptosNativeB.octas;\n  };\n  /**\n   * Compares AptosNative with current instance.\n   * @param value - the value to compare with\n   * @returns true if the values are equal\n   * @example\n   * ```ts\n   * const native = AptosNative.create(2, 'octas');\n   * native.equals(AptosNative.create(1)); // false\n   * ```\n   */\n  AptosNative.prototype.equals = function (value) {\n    return AptosNative.equals(this, value);\n  };\n  /**\n   * Converts the AptosNative to a string.\n   * @returns the value of the AptosNative as a string\n   * @example `native.format()`\n   */\n  AptosNative.prototype.format = function () {\n    // TODO: add `format` argument\n    return this.octas;\n  };\n  /**\n   * Converts the AptosNative to a string.\n   * @returns the value of the AptosNative as a string\n   * @example `native.toJSON()`\n   */\n  AptosNative.prototype.toJSON = function () {\n    return this.octas;\n  };\n  /**\n   * Converts the AptosNative to a string.\n   * @returns the value of the AptosNative as a string\n   * @example `native.toString()`\n   */\n  AptosNative.prototype.toString = function () {\n    return this.octas;\n  };\n  Object.defineProperty(AptosNative.prototype, \"value\", {\n    /**\n     * @returns the value of the AptosNative as a BigNumber\n     * @example `native.value`\n     */\n    get: function () {\n      return this.rawValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AptosNative.prototype, \"aptos\", {\n    /**\n     * Converts the AptosNative to an aptos unit.\n     * @returns the value of the AptosNative as an aptos string\n     * @example `native.aptos`\n     */\n    get: function () {\n      return this.rawValue.toDecimal(unitToDecimals['aptos']);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AptosNative.prototype, \"octas\", {\n    /**\n     * Converts the AptosNative to a string.\n     * @returns the value of the AptosNative as a string\n     * @example `native.lamports`\n     */\n    get: function () {\n      return this.rawValue.toString();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return AptosNative;\n}();\nexports.AptosNative = AptosNative;","map":{"version":3,"mappings":";;;;;;AAAA;AAoBA,IAAMA,cAAc,GAAoC;EACtDC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE;CACR;AAED;;;;;AAKA;EAkCE,qBAAqCC,QAAmB;IAAnB,aAAQ,GAARA,QAAQ;EAAc;EAjC3D;;;;;;;;;;;EAWcC,kBAAM,GAApB,UAAqBC,KAAqB,EAAEC,IAAsB;IAChE,IAAID,KAAK,YAAYD,WAAW,EAAE;MAChC,OAAOC,KAAK;;IAEd,OAAO,IAAID,WAAW,CAACA,WAAW,CAACG,KAAK,CAACF,KAAK,EAAEC,IAAI,CAAC,CAAC;EACxD,CAAC;EAEcF,iBAAK,GAApB,UAAqBC,KAAmB,EAAEC,IAA+B;IAA/B;MAAAA,cAA+B;IAAA;IACvE,IAAIE,OAAe;IACnB,IAAI,OAAOF,IAAI,KAAK,QAAQ,EAAE;MAC5BE,OAAO,GAAGF,IAAI;KACf,MAAM,IAAIN,cAAc,CAACM,IAAI,CAAC,KAAKG,SAAS,EAAE;MAC7CD,OAAO,GAAGR,cAAc,CAACM,IAAI,CAAC;KAC/B,MAAM;MACL,MAAM,IAAII,uBAAS,CAAC;QAClBC,IAAI,EAAED,2BAAa,CAACE,gBAAgB;QACpCC,OAAO,EAAE,oCAA6BP,IAAI;OAC3C,CAAC;;IAEJ,OAAOI,uBAAS,CAACI,WAAW,CAACT,KAAK,CAACU,QAAQ,EAAE,EAAEP,OAAO,CAAC;EACzD,CAAC;EAID;;;;;;;;;;EAUcJ,kBAAM,GAApB,UAAqBY,MAAsB,EAAEC,MAAsB;IACjE,IAAMC,YAAY,GAAGd,WAAW,CAACe,MAAM,CAACH,MAAM,CAAC;IAC/C,IAAMI,YAAY,GAAGhB,WAAW,CAACe,MAAM,CAACF,MAAM,CAAC;IAE/C,OAAOC,YAAY,CAAChB,KAAK,KAAKkB,YAAY,CAAClB,KAAK;EAClD,CAAC;EAED;;;;;;;;;;EAUOE,4BAAM,GAAb,UAAcC,KAAkB;IAC9B,OAAOD,WAAW,CAACiB,MAAM,CAAC,IAAI,EAAEhB,KAAK,CAAC;EACxC,CAAC;EAED;;;;;EAKOD,4BAAM,GAAb;IACE;IACA,OAAO,IAAI,CAACF,KAAK;EACnB,CAAC;EAED;;;;;EAKOE,4BAAM,GAAb;IACE,OAAO,IAAI,CAACF,KAAK;EACnB,CAAC;EAED;;;;;EAKOE,8BAAQ,GAAf;IACE,OAAO,IAAI,CAACF,KAAK;EACnB,CAAC;EAMDoB,sBAAWlB,8BAAK;IAJhB;;;;SAIA;MACE,OAAO,IAAI,CAACD,QAAQ;IACtB,CAAC;;;;EAODmB,sBAAWlB,8BAAK;IALhB;;;;;SAKA;MACE,OAAO,IAAI,CAACD,QAAQ,CAACoB,SAAS,CAACvB,cAAc,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC;;;;EAODsB,sBAAWlB,8BAAK;IALhB;;;;;SAKA;MACE,OAAO,IAAI,CAACD,QAAQ,CAACY,QAAQ,EAAE;IACjC,CAAC;;;;EACH,kBAAC;AAAD,CAAC,EAxHD;AAAaS","names":["unitToDecimals","aptos","octas","rawValue","AptosNative","value","unit","parse","decimal","undefined","common_core_1","code","INVALID_ARGUMENT","message","fromDecimal","toString","valueA","valueB","aptosNativeA","create","aptosNativeB","equals","Object","toDecimal","exports"],"sources":["../../../src/dataTypes/AptosNative/AptosNative.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}