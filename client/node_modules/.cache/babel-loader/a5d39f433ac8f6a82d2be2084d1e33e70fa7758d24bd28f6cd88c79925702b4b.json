{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamEvmInternalTransaction = void 0;\nvar common_core_1 = require(\"@moralisweb3/common-core\");\nvar common_evm_utils_1 = require(\"@moralisweb3/common-evm-utils\");\nvar StreamTriggerOutput_1 = require(\"../StreamTriggerOutput\");\n/**\n * The StreamEvmInternalTransaction class is a representation of an internal transaction that is returned by the Moralis Stream API\n *\n * @category DataType\n */\nvar StreamEvmInternalTransaction = /** @class */function () {\n  function StreamEvmInternalTransaction(data, core) {\n    this._data = StreamEvmInternalTransaction.parse(data, core);\n  }\n  /**\n   * Create a new instance of StreamEvmInternalTransactionish\n   *\n   * @param data - the StreamEvmInternalTransactionishish type\n   * @param core - the Core instance\n   * @example\n   * ```ts\n   * const transaction = StreamEvmTransactionish.create(data);\n   * ```\n   * @returns an instance of StreamEvmInternalTransaction\n   */\n  StreamEvmInternalTransaction.create = function (data, core) {\n    if (data instanceof StreamEvmInternalTransaction) {\n      return data;\n    }\n    var finalCore = core !== null && core !== void 0 ? core : common_core_1.CoreProvider.getDefault();\n    return new StreamEvmInternalTransaction(data, finalCore);\n  };\n  /**\n   * Compares two StreamEvmInternalTransaction data. It checks a deep equality check of both values.\n   * @param valueA - the first StreamEvmInternalTransactionish data to compare\n   * @param valueB - the second StreamEvmInternalTransactionish data to compare\n   * @returns true if the values are equal, false otherwise\n   * @example\n   * ```ts\n   *  StreamEvmInternalTransaction.equals(valueA, valueB);\n   * ```\n   */\n  StreamEvmInternalTransaction.equals = function (valueA, valueB) {\n    var _a, _b;\n    var evmInternalTransactionA = StreamEvmInternalTransaction.create(valueA);\n    var evmInternalTransactionB = StreamEvmInternalTransaction.create(valueB);\n    if (!evmInternalTransactionA.chain.equals(evmInternalTransactionB.chain)) {\n      return false;\n    }\n    if (evmInternalTransactionA.transactionHash !== evmInternalTransactionB.transactionHash) {\n      return false;\n    }\n    if (((_a = evmInternalTransactionA.triggers) === null || _a === void 0 ? void 0 : _a.length) !== ((_b = evmInternalTransactionB.triggers) === null || _b === void 0 ? void 0 : _b.length) || !StreamTriggerOutput_1.StreamTriggerOutput.arrayEquals(evmInternalTransactionA.triggers || [], evmInternalTransactionB.triggers || [])) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Compares an StreamEvmInternalTransactionish data to this StreamEvmInternalTransaction instance.\n   * @param value - the value to compare\n   * @returns true if the value is equal to the current instance, false otherwise\n   * @example\n   * ```ts\n   * evmInternalTransaction.equals(value);\n   * ```\n   */\n  StreamEvmInternalTransaction.prototype.equals = function (value) {\n    return StreamEvmInternalTransaction.equals(this, value);\n  };\n  /**\n   * Converts the StreamEvmInternalTransaction instance to a JSON object.\n   * @returns JSON object of the StreamEvmInternalTransaction instance\n   * @example `evmInternalTransaction.toJSON()`\n   */\n  StreamEvmInternalTransaction.prototype.toJSON = function () {\n    var _a, _b, _c, _d, _e;\n    var data = this._data;\n    return __assign(__assign({}, data), {\n      chain: data.chain.format(),\n      from: (_a = data.from) === null || _a === void 0 ? void 0 : _a.format(),\n      to: (_b = data.to) === null || _b === void 0 ? void 0 : _b.format(),\n      value: (_c = data.value) === null || _c === void 0 ? void 0 : _c.toString(),\n      gas: (_d = data.gas) === null || _d === void 0 ? void 0 : _d.toString(),\n      triggers: (_e = data.triggers) === null || _e === void 0 ? void 0 : _e.map(function (trigger) {\n        return trigger.format();\n      })\n    });\n  };\n  /**\n   * Converts the StreamEvmInternalTransaction instance to a JSON object.\n   * @returns JSON object of the StreamEvmInternalTransaction instance\n   * @example `evmInternalTransaction.format()`\n   */\n  StreamEvmInternalTransaction.prototype.format = function () {\n    return this.toJSON();\n  };\n  Object.defineProperty(StreamEvmInternalTransaction.prototype, \"chain\", {\n    get: function () {\n      return this._data.chain;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamEvmInternalTransaction.prototype, \"from\", {\n    get: function () {\n      return this._data.from;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamEvmInternalTransaction.prototype, \"to\", {\n    get: function () {\n      return this._data.to;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamEvmInternalTransaction.prototype, \"value\", {\n    get: function () {\n      return this._data.value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamEvmInternalTransaction.prototype, \"transactionHash\", {\n    get: function () {\n      return this._data.transactionHash;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamEvmInternalTransaction.prototype, \"gas\", {\n    get: function () {\n      return this._data.gas;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StreamEvmInternalTransaction.prototype, \"triggers\", {\n    get: function () {\n      return this._data.triggers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StreamEvmInternalTransaction.parse = function (data, core) {\n    return __assign(__assign({}, data), {\n      chain: common_evm_utils_1.EvmChain.create(data.chain, core),\n      from: (0, common_core_1.maybe)(data.from, function (value) {\n        return common_evm_utils_1.EvmAddress.create(value, core);\n      }),\n      to: (0, common_core_1.maybe)(data.to, function (value) {\n        return common_evm_utils_1.EvmAddress.create(value, core);\n      }),\n      value: (0, common_core_1.maybe)(data.value, function (value) {\n        return common_core_1.BigNumber.create(value);\n      }),\n      gas: (0, common_core_1.maybe)(data.gas, function (value) {\n        return common_core_1.BigNumber.create(value);\n      }),\n      triggers: (0, common_core_1.maybe)(data.triggers, function (triggers) {\n        return triggers.map(function (trigger) {\n          return StreamTriggerOutput_1.StreamTriggerOutput.create(trigger, core);\n        });\n      })\n    });\n  };\n  return StreamEvmInternalTransaction;\n}();\nexports.StreamEvmInternalTransaction = StreamEvmInternalTransaction;","map":{"version":3,"mappings":"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","names":["data","core","_data","StreamEvmInternalTransaction","parse","finalCore","common_core_1","getDefault","valueA","valueB","evmInternalTransactionA","create","evmInternalTransactionB","chain","equals","transactionHash","triggers","length","StreamTriggerOutput_1","arrayEquals","value","format","from","to","toString","gas","map","trigger","toJSON","Object","common_evm_utils_1","exports"],"sources":["../../../src/dataTypes/StreamEvmInternalTransaction/StreamEvmInternalTransaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}