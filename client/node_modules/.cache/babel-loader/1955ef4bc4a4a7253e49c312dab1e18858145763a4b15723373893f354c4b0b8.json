{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syncNFTContractOperation = void 0;\nvar dataTypes_1 = require(\"../../dataTypes\");\nvar EvmChainResolver_1 = require(\"../../EvmChainResolver\");\n/** Initiates a sync of a previously non synced Contract. */\nexports.syncNFTContractOperation = {\n  method: 'PUT',\n  name: 'syncNFTContract',\n  id: 'syncNFTContract',\n  groupName: 'nft',\n  urlPathPattern: '/nft/{address}/sync',\n  urlPathParamNames: ['address'],\n  urlSearchParamNames: ['chain'],\n  getRequestUrlParams: getRequestUrlParams,\n  serializeRequest: serializeRequest,\n  deserializeRequest: deserializeRequest,\n  deserializeResponse: deserializeResponse\n};\n// Methods\nfunction getRequestUrlParams(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    address: dataTypes_1.EvmAddress.create(request.address, core).lowercase\n  };\n}\nfunction deserializeResponse() {\n  return {\n    success: true\n  };\n}\nfunction serializeRequest(request, core) {\n  return {\n    chain: EvmChainResolver_1.EvmChainResolver.resolve(request.chain, core).apiHex,\n    address: dataTypes_1.EvmAddress.create(request.address, core).checksum\n  };\n}\nfunction deserializeRequest(jsonRequest, core) {\n  return {\n    chain: dataTypes_1.EvmChain.create(jsonRequest.chain, core),\n    address: dataTypes_1.EvmAddress.create(jsonRequest.address, core)\n  };\n}","map":{"version":3,"mappings":";;;;;;AACA;AACA;AA4BA;AACaA,gCAAwB,GAKjC;EACFC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,iBAAiB;EACvBC,EAAE,EAAE,iBAAiB;EACrBC,SAAS,EAAE,KAAK;EAChBC,cAAc,EAAE,qBAAqB;EACrCC,iBAAiB,EAAE,CAAC,SAAS,CAAC;EAC9BC,mBAAmB,EAAE,CAAC,OAAO,CAAC;EAE9BC,mBAAmB;EACnBC,gBAAgB;EAChBC,kBAAkB;EAClBC,mBAAmB;CACpB;AAED;AAEA,SAASH,mBAAmB,CAACI,OAA+B,EAAEC,IAAU;EACtE,OAAO;IACLC,KAAK,EAAEC,mCAAgB,CAACC,OAAO,CAACJ,OAAO,CAACE,KAAK,EAAED,IAAI,CAAC,CAACI,MAAM;IAC3DC,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACR,OAAO,CAACM,OAAO,EAAEL,IAAI,CAAC,CAACQ;GACnD;AACH;AAEA,SAASV,mBAAmB;EAC1B,OAAO;IACLW,OAAO,EAAE;GACV;AACH;AAEA,SAASb,gBAAgB,CAACG,OAA+B,EAAEC,IAAU;EACnE,OAAO;IACLC,KAAK,EAAEC,mCAAgB,CAACC,OAAO,CAACJ,OAAO,CAACE,KAAK,EAAED,IAAI,CAAC,CAACI,MAAM;IAC3DC,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACR,OAAO,CAACM,OAAO,EAAEL,IAAI,CAAC,CAACU;GACnD;AACH;AAEA,SAASb,kBAAkB,CAACc,WAAuC,EAAEX,IAAU;EAC7E,OAAO;IACLC,KAAK,EAAEK,oBAAQ,CAACC,MAAM,CAACI,WAAW,CAACV,KAAK,EAAED,IAAI,CAAC;IAC/CK,OAAO,EAAEC,sBAAU,CAACC,MAAM,CAACI,WAAW,CAACN,OAAO,EAAEL,IAAI;GACrD;AACH","names":["exports","method","name","id","groupName","urlPathPattern","urlPathParamNames","urlSearchParamNames","getRequestUrlParams","serializeRequest","deserializeRequest","deserializeResponse","request","core","chain","EvmChainResolver_1","resolve","apiHex","address","dataTypes_1","create","lowercase","success","checksum","jsonRequest"],"sources":["../../../src/operations/nft/syncNFTContractOperation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}