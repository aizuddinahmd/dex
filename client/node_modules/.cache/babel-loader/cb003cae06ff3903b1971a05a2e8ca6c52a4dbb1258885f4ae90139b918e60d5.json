{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BigNumberFormatter = void 0;\nvar Error_1 = require(\"../../Error\");\nvar BigNumberFormatter = /** @class */function () {\n  function BigNumberFormatter() {}\n  BigNumberFormatter.toDecimal = function (value, decimals) {\n    if (decimals < 0) {\n      throw new Error_1.CoreError({\n        code: Error_1.CoreErrorCode.BIG_NUMBER_ERROR,\n        message: 'Invalid decimals'\n      });\n    }\n    var result = value.toString();\n    if (decimals === 0) {\n      return result;\n    }\n    var isNegative = result.startsWith('-');\n    if (isNegative) {\n      result = result.substring(1);\n    }\n    result = result.padStart(decimals, '0');\n    var dot = result.length - decimals;\n    var whole = dot === 0 ? '0' : result.substring(0, dot);\n    var fraction = result.substring(dot);\n    result = \"\".concat(whole, \".\").concat(fraction);\n    while (result[result.length - 1] === '0' && result[result.length - 2] !== '.') {\n      result = result.substring(0, result.length - 1);\n    }\n    if (isNegative) {\n      result = \"-\".concat(result);\n    }\n    return result;\n  };\n  BigNumberFormatter.toHex = function (value) {\n    var result = value.toString(16);\n    var isNegative = result.startsWith('-');\n    if (isNegative) {\n      result = result.substring(1);\n    }\n    if (result.length % 2 !== 0) {\n      result = \"0\".concat(result);\n    }\n    result = \"0x\".concat(result);\n    if (isNegative) {\n      result = \"-\".concat(result);\n    }\n    return result;\n  };\n  return BigNumberFormatter;\n}();\nexports.BigNumberFormatter = BigNumberFormatter;","map":{"version":3,"mappings":";;;;;;AAAA;AAEA;EAAA,+BAkDA;EAjDgBA,4BAAS,GAAvB,UAAwBC,KAAa,EAAEC,QAAgB;IACrD,IAAIA,QAAQ,GAAG,CAAC,EAAE;MAChB,MAAM,IAAIC,iBAAS,CAAC;QAClBC,IAAI,EAAED,qBAAa,CAACE,gBAAgB;QACpCC,OAAO,EAAE;OACV,CAAC;;IAGJ,IAAIC,MAAM,GAAGN,KAAK,CAACO,QAAQ,EAAE;IAC7B,IAAIN,QAAQ,KAAK,CAAC,EAAE;MAClB,OAAOK,MAAM;;IAGf,IAAME,UAAU,GAAGF,MAAM,CAACG,UAAU,CAAC,GAAG,CAAC;IACzC,IAAID,UAAU,EAAE;MACdF,MAAM,GAAGA,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC;;IAE9BJ,MAAM,GAAGA,MAAM,CAACK,QAAQ,CAACV,QAAQ,EAAE,GAAG,CAAC;IAEvC,IAAMW,GAAG,GAAGN,MAAM,CAACO,MAAM,GAAGZ,QAAQ;IACpC,IAAMa,KAAK,GAAGF,GAAG,KAAK,CAAC,GAAG,GAAG,GAAGN,MAAM,CAACI,SAAS,CAAC,CAAC,EAAEE,GAAG,CAAC;IACxD,IAAMG,QAAQ,GAAGT,MAAM,CAACI,SAAS,CAACE,GAAG,CAAC;IAEtCN,MAAM,GAAG,UAAGQ,KAAK,cAAIC,QAAQ,CAAE;IAE/B,OAAOT,MAAM,CAACA,MAAM,CAACO,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,IAAIP,MAAM,CAACA,MAAM,CAACO,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;MAC7EP,MAAM,GAAGA,MAAM,CAACI,SAAS,CAAC,CAAC,EAAEJ,MAAM,CAACO,MAAM,GAAG,CAAC,CAAC;;IAEjD,IAAIL,UAAU,EAAE;MACdF,MAAM,GAAG,WAAIA,MAAM,CAAE;;IAEvB,OAAOA,MAAM;EACf,CAAC;EAEaP,wBAAK,GAAnB,UAAoBC,KAAa;IAC/B,IAAIM,MAAM,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;IAC/B,IAAMC,UAAU,GAAGF,MAAM,CAACG,UAAU,CAAC,GAAG,CAAC;IACzC,IAAID,UAAU,EAAE;MACdF,MAAM,GAAGA,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC;;IAE9B,IAAIJ,MAAM,CAACO,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;MAC3BP,MAAM,GAAG,WAAIA,MAAM,CAAE;;IAEvBA,MAAM,GAAG,YAAKA,MAAM,CAAE;IACtB,IAAIE,UAAU,EAAE;MACdF,MAAM,GAAG,WAAIA,MAAM,CAAE;;IAEvB,OAAOA,MAAM;EACf,CAAC;EACH,yBAAC;AAAD,CAAC,EAlDD;AAAaU","names":["BigNumberFormatter","value","decimals","Error_1","code","BIG_NUMBER_ERROR","message","result","toString","isNegative","startsWith","substring","padStart","dot","length","whole","fraction","exports"],"sources":["../../../src/dataTypes/BigNumber/BigNumberFormatter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}