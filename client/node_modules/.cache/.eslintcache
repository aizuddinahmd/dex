[{"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/index.js":"1","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/App.js":"2","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/reportWebVitals.js":"3","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/styles/index.js":"4","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/assets/index.js":"5","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/index.js":"6","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/Loader.js":"7","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/Exchange.js":"8","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/WalletButton.js":"9","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/constant/index.js":"10","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/SwapOut.js":"11","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/SwapIn.js":"12"},{"size":811,"mtime":1675991076825,"results":"13","hashOfConfig":"14"},{"size":1154,"mtime":1675927140376,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1675914917595,"results":"16","hashOfConfig":"14"},{"size":2332,"mtime":1675938264428,"results":"17","hashOfConfig":"14"},{"size":190,"mtime":1675915132081,"results":"18","hashOfConfig":"14"},{"size":190,"mtime":1675952463710,"results":"19","hashOfConfig":"14"},{"size":370,"mtime":1675926812424,"results":"20","hashOfConfig":"14"},{"size":4674,"mtime":1676698270500,"results":"21","hashOfConfig":"14"},{"size":637,"mtime":1675986637706,"results":"22","hashOfConfig":"14"},{"size":2834,"mtime":1675936897671,"results":"23","hashOfConfig":"14"},{"size":941,"mtime":1675952624479,"results":"24","hashOfConfig":"14"},{"size":939,"mtime":1675952355558,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"rwuyqd",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/index.js",["67","68"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { WagmiConfig, createClient, configureChains } from \"wagmi\";\nimport { mainnet, goerli } from \"wagmi/chains\";\n\nimport { publicProvider } from \"wagmi/providers/public\";\nimport { alchemyProvider } from \"wagmi/providers/alchemy\";\n\nconst { chains, provider, webSocketProvider } = configureChains(\n  [mainnet, goerli],\n  [publicProvider()]\n);\n\nconst client = createClient({\n  autoConnect: true,\n  provider,\n  webSocketProvider,\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <WagmiConfig client={client}>\n      <App />\n    </WagmiConfig>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n",[],"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/App.js",["69"],[],"import React from \"react\";\nimport styles from \"./styles\";\nimport { uniswapLogo } from \"./assets\";\nimport { Loader, Exchange } from \"./components\";\nimport WalletButton from \"./components/WalletButton\";\n\nfunction App() {\n  return (\n    <div className={`${styles.container} bg-black`}>\n      <div className={`${styles.innerContainer}`}>\n        <header className={`${styles.header}`}>\n          <img\n            src={uniswapLogo}\n            alt=\"logo\"\n            className=\"w-16 h-16 object-contain\"\n          />\n          <WalletButton />\n        </header>\n        <div className={`${styles.exchangeContainer}`}>\n          <div className={`${styles.headTitle}`}>Swap Your Token</div>\n          <div className={`${styles.exchangeBoxWrapper}`}>\n            <div className={`${styles.exchangeBox}`}>\n              <div className=\"pink_gradient\" />\n              <div className={`${styles.exchange}`}>\n                {/* <Loader title=\"Please wait\" /> */}\n                <Exchange />\n              </div>\n              <div className=\"blue_gradient\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/reportWebVitals.js",[],[],"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/styles/index.js",[],[],"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/assets/index.js",[],[],"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/index.js",[],[],"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/Loader.js",[],[],"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/Exchange.js",["70","71","72","73"],[],"import React, { useState } from \"react\";\nimport styles from \"../styles\";\nimport { chevronDown } from \"../assets\";\nimport { Modal } from \"antd\";\nimport { tokenList } from \"../constant\";\nimport SwapIn from \"./SwapIn\";\nimport SwapOut from \"./SwapOut\";\nimport { useAccount, useSendTransaction } from \"wagmi\";\nimport axios from \"axios\";\n\nconst Exchange = () => {\n  const { address, isConnected } = useAccount();\n  const [tokenOneAmount, setTokenOneAmount] = useState(\"\");\n  const [tokenTwoAmount, setTokenTwoAmount] = useState(\"\");\n  const [tokenOne, setTokenOne] = useState(tokenList[0]);\n  const [tokenTwo, setTokenTwo] = useState(tokenList[1]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [changeToken, setChangeToken] = useState(1);\n  const [prices, setPrices] = useState(\"\");\n  const [txDetails, setTxDetails] = useState({\n    to: \"\",\n    from: \"\",\n    value: \"\",\n  });\n\n  const { data, sendTransaction } = useSendTransaction({\n    request: {\n      from: address,\n      to: String(txDetails.to),\n      data: String(txDetails.data),\n      value: String(txDetails.value),\n    },\n  });\n\n  const changeAmount = (e) => {\n    setTokenOneAmount(e.target.value);\n    if (e.target.value && prices) {\n      setTokenTwoAmount((e.target.value * prices.ratio).toFixed(2));\n    } else {\n      setTokenTwoAmount(\"\");\n    }\n  };\n\n  const fetchPrices = async (one, two) => {\n    const res = await axios.get(`http://localhost:3001/tokenPrice`, {\n      params: { addressOne: one, addressTwo: two },\n    });\n\n    setPrices(res.data);\n  };\n\n  const switchToken = () => {\n    setTokenOneAmount(\"\");\n    const one = tokenOne;\n    const two = tokenTwo;\n    setTokenOne(two);\n    setTokenTwo(one);\n    fetchPrices(two.address, one.address);\n  };\n\n  const modifyToken = (i) => {\n    if (changeToken === 1) {\n      setTokenOne(tokenList[i]);\n      fetchPrices(tokenList[i].address, tokenTwo.address);\n    } else {\n      setTokenTwo(tokenList[i]);\n      fetchPrices(tokenOne.address, tokenList[i].address);\n    }\n    setIsOpen(false);\n  };\n\n  const openModal = (asset) => {\n    setChangeToken(asset);\n    setIsOpen(true);\n  };\n\n  const fetchSwap = async () => {\n    const allowance = await axios.get(\n      `https://api.1inch.io/v5.0/1/approve/allowance?tokenAddress=${tokenOne.address}&walletAddress=${address}`\n    );\n\n    if (allowance.data.allowance === \"0\") {\n      const approve = await axios.get(\n        `https://api.1inch.io/v5.0/1/approve/transaction?tokenAddress=${tokenOne.address}`\n      );\n\n      setTxDetails(approve.data);\n      console.log(\"not approved\");\n      return;\n    }\n\n    const tx = await axios.get(\n      `https://api.1inch.io/v5.0/1/swap?fromTokenAddress=${\n        tokenOne.address\n      }&toTokenAddress=${tokenTwo.address}&amount=${tokenOneAmount.padEnd(\n        tokenOne.decimals + tokenOneAmount.length,\n        \"0\"\n      )}&fromAddress=${address}`\n    );\n\n    let decimals = Number(`1E${tokenTwo.decimals}`);\n    setTokenTwoAmount((Number(tx.data.toTokenAmount) / decimals).toFixed(2));\n\n    setTxDetails(tx.data.tx);\n  };\n\n  return (\n    <>\n      <Modal\n        open={isOpen}\n        footer={null}\n        onCancel={() => setIsOpen(false)}\n        title=\"Select a token\"\n      >\n        <div className={`${styles.currencyList} flex flex-col`}>\n          {tokenList?.map((e, i) => {\n            return (\n              <div\n                key={i}\n                className={`${styles.currencyListItem} flex justify-between`}\n                onClick={() => modifyToken(i)}\n              >\n                <img src={e.img} className={`h-10 w-10 object-contain`} />\n                <div>{e.name}</div>\n                <div>{e.ticker}</div>\n              </div>\n            );\n          })}\n        </div>\n      </Modal>\n      <div>\n        <div className=\"\">\n          <SwapIn\n            placeholder=\"0\"\n            value={tokenOneAmount}\n            onChange={changeAmount}\n            onClick={() => openModal(1)}\n            token={tokenOne}\n          />\n        </div>\n        <div className={`flex justify-center`}>\n          <img\n            src={chevronDown}\n            alt=\"down\"\n            className={`w-8 h-8 object-contain cursor-pointer`}\n            onClick={switchToken}\n          />\n        </div>\n        <div className=\"mb-8\">\n          <SwapOut\n            placeholder=\"0\"\n            value={tokenTwoAmount}\n            onClick={() => openModal(2)}\n            token={tokenTwo}\n            disabled={true}\n          />\n        </div>\n        <button\n          className={`${styles.actionButton} bg-site-pink`}\n          onClick={fetchSwap}\n        >\n          Swap\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Exchange;\n","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/WalletButton.js",["74","75","76"],[],"import React, { useState } from \"react\";\nimport { useConnect, useAccount, address } from \"wagmi\";\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\nimport styles from \"../styles\";\n\nconst WalletButton = () => {\n  const [account, setAccount] = useState(\"\");\n\n  const { address, isConnected } = useAccount();\n  const { connect } = useConnect({\n    connector: new MetaMaskConnector(),\n  });\n\n  return (\n    <button className={`${styles.walletButton}`} onClick={connect}>\n      {isConnected\n        ? address.slice(0, 4) + \"...\" + address.slice(38)\n        : \"Connect Wallet\"}\n    </button>\n  );\n};\n\nexport default WalletButton;\n","/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/constant/index.js",[],[],"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/SwapOut.js",[],[],"/Users/judin_arimz/Desktop/SkolaLab/dex/client/src/components/SwapIn.js",[],[],{"ruleId":"77","severity":1,"message":"78","line":10,"column":10,"nodeType":"79","messageId":"80","endLine":10,"endColumn":25},{"ruleId":"77","severity":1,"message":"81","line":12,"column":9,"nodeType":"79","messageId":"80","endLine":12,"endColumn":15},{"ruleId":"77","severity":1,"message":"82","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":16},{"ruleId":"77","severity":1,"message":"83","line":12,"column":20,"nodeType":"79","messageId":"80","endLine":12,"endColumn":31},{"ruleId":"77","severity":1,"message":"84","line":26,"column":11,"nodeType":"79","messageId":"80","endLine":26,"endColumn":15},{"ruleId":"77","severity":1,"message":"85","line":26,"column":17,"nodeType":"79","messageId":"80","endLine":26,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":123,"column":17,"nodeType":"88","endLine":123,"endColumn":75},{"ruleId":"77","severity":1,"message":"89","line":2,"column":34,"nodeType":"79","messageId":"80","endLine":2,"endColumn":41},{"ruleId":"77","severity":1,"message":"90","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":17},{"ruleId":"77","severity":1,"message":"91","line":7,"column":19,"nodeType":"79","messageId":"80","endLine":7,"endColumn":29},"no-unused-vars","'alchemyProvider' is defined but never used.","Identifier","unusedVar","'chains' is assigned a value but never used.","'Loader' is defined but never used.","'isConnected' is assigned a value but never used.","'data' is assigned a value but never used.","'sendTransaction' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'address' is defined but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used."]